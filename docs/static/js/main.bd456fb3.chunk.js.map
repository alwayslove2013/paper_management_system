{"version":3,"sources":["Server/index.js","Common/Counter.js","Store/createStoreV0128.js","Store/index.js","Views/ControlView/index.js","Views/UnitView/CircleUnit.js","Views/UnitView/index.js","Views/DetailView/index.js","Common/userList.js","Views/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","fetchData","url","params","getUrl","includes","qs","stringify","Promise","resolve","reject","fetch","then","res","json","data","catch","err","getPublicTags","a","getPrivateTags","uid","setPrivateTags","pid","paper","privateTags","read","tags","filter","join","mostCommon","items","n","item2Count","forEach","itemList","item","itemCountList","push","count","sort","b","slice","map","attr2func","publicTags","createStore","papers","commonAuthors","commonCountries","commonPublicTags","commonPrivateTags","setPapers","compareAttr","console","log","i","DOI","CitationCount","Countries","colors","authors","AuthorNames","split","trim","countries","s","part","length","computedPosition","initPublicTags","runInAction","setPaper","doi","attr","value","this","find","p","userId","toJS","doiUpdateColors","unitXAttr","xAttrSet","Set","add","xAttrList","Array","from","unitYAttr","maxUnitBlockPaperCount","unitBlockCount","xAttr","yAttr","unitIndex","Math","max","Object","values","initPrivateTags","readIndex","indexOf","splice","batchUpdateColors","setUserId","localStorage","setItem","initUserId","getItem","label","list","concat","activeTags","ans","key","tag2color","colorUse","setTagColor","tag","category","fullTag","_color","d3","updateColor","isReadTagActive","maxCitationCount","currentSelected","isSelected","setCurrentSelected","cancelSelect","storeContext","React","createContext","StoreProvider","children","store","useLocalObservable","Provider","useGlobalStore","useContext","Error","ControlView","observer","controlTagNameList","className","ControlItem","tagData","useState","setTags","handleClickOption","currentTags","index","clickOption","isSelect","ControlOption","style","background","border","onClick","CircleUnit","memo","cx","cy","r","opacity","handleClick","title","stepAngle","PI","polarX","angle","sin","polarY","cos","points","_","startX","startY","endX","endY","borderOpacity","id","e","cursor","fill","stroke","strokeWidth","point","d","unitLayoutPadding","unitBlockPadding","UnitView","unitXAttrList","unitYAttrList","controlIsActive","svgWidth","setSvgWidth","svgHeight","setSvgHeight","useEffect","svg","document","querySelector","clientWidth","clientHeight","unitBlockWidth","unitBlockHeight","aspectRatio","floor","blockCountX","ceil","sqrt","xAttr2blockCountX","maxColumnBlockCount","j","get","xAttr2blockCountX_StartCount","xAttr2blockCountX_StartPos","scale","domain","range","paperCircles","paperCircle","oriData","BlockIndexX","BlockIndexY","circleIndexX","circleIndexY","citationGrey","activeColors","Title","xLabels","x","y","yLabels","handleClickPaper","stopPropagation","width","height","textAnchor","fontSize","transform","DetailView","currentSelectedPaper","editTags","initTags","Year","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","editTag","handleChangeTags","DetailItem","DetailEditTags","_setTags","newTags","editInputIndex","setEditInputIndex","input","useRef","editInputValue","setEditInputValue","handleEditInputConfirm","inputValue","setInputValue","handleInputConfirm","setInputVisible","inputVisible","onchange","target","onBlur","onPressEnter","closable","onClose","removeTag","ref","type","PlusOutlined","userList","Option","Select","Header","placeholder","user","App","ViewContainer","fetchPapers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bd456fb3.chunk.js","sourcesContent":["import qs from \"qs\";\n\nconst baseUrl = \"http://vis.pku.edu.cn/vis4vis/\";\nconst fetchData = (url, params = \"\") => {\n  const getUrl =\n    baseUrl + url + (url.includes(\"?\") ? \"&\" : \"?\") + qs.stringify(params);\n  return new Promise((resolve, reject) => {\n    fetch(getUrl)\n      .then((res) => res.json())\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n\nexport const getPublicTags = async () => {\n  return await fetchData(\"get_public_tags\");\n};\n\nexport const getPrivateTags = async ({ uid }) => {\n  return await fetchData(\"get_private_tags\", { uid });\n};\n\nexport const setPublicTags = ({ pid, paper }) => {\n  const tags = paper.publicTags;\n  fetchData(\"set_public_tags\", { pid, tags: tags.join(\",\") });\n  return \"OK\";\n};\n\nexport const setPrivateTags = ({ uid, pid, paper }) => {\n  const { privateTags, read } = paper;\n  uid &&\n    fetchData(\"set_private_tags\", {\n      uid,\n      pid,\n      tags: [...privateTags, read && \"read\"].filter((a) => a).join(\",\"),\n    });\n  return \"OK\";\n};\n","const mostCommon = (items, n = 10) => {\n  const item2Count = {};\n  items.forEach((itemList) => {\n    itemList.forEach((item) => {\n      if (item) {\n        if (item in item2Count) {\n          item2Count[item] += 1;\n        } else {\n          item2Count[item] = 1;\n        }\n      }\n    });\n  });\n  const itemCountList = [];\n  for (let item in item2Count) {\n    itemCountList.push({\n      item,\n      count: item2Count[item],\n    });\n  }\n  itemCountList.sort((a, b) => b.count - a.count);\n  return itemCountList.slice(0, n).map(a => a.item);\n};\n\nexport default mostCommon;\n","import * as d3 from \"d3\";\nimport { toJS, runInAction } from \"mobx\";\nimport {\n  setPublicTags,\n  setPrivateTags,\n  getPublicTags,\n  getPrivateTags,\n} from \"../Server\";\n// import { get } from \"lodash\";\nimport mostCommon from \"../Common/Counter\";\n\nconst debug = true;\n\nconst attr2func = {\n  publicTags: setPublicTags,\n  privateTags: setPrivateTags,\n  read: setPrivateTags,\n};\n\nconst createStore = () => {\n  return {\n    papers: [],\n    commonAuthors: [],\n    commonCountries: [],\n    commonPublicTags: [],\n    commonPrivateTags: [],\n    async setPapers(papers, compareAttr = \"CitationCount\") {\n      debug && console.log(\"==> 初始化Papers\");\n      papers.forEach((paper, i) => {\n        // 初始化，一些特殊处理，比如如果没有doi或者引用量，就安排一个\n        if (paper.DOI === \"#\") paper.DOI = `tmp-${i}`;\n        if (paper.CitationCount === \"\") paper.CitationCount = 0;\n        if (paper.Countries === \"#\" || paper.Countries === \"###\")\n          paper.Countries = \"\";\n        paper.privateTags = [];\n        paper.read = false;\n        paper.publicTags = [];\n        paper.colors = [];\n\n        // 提取authors\n        paper.authors = paper.AuthorNames.split(\";\").map((a) => a.trim());\n\n        // 提取countries\n        paper.countries = paper.Countries.split(\";\")\n          .map((s) => {\n            const part = s.trim().split(\" \");\n            return part.length === 0 ? \"\" : part[part.length - 1].trim();\n          })\n          .filter((a) => a);\n      });\n\n      this.commonAuthors = mostCommon(papers.map((paper) => paper.authors));\n      this.commonCountries = mostCommon(papers.map((paper) => paper.countries));\n\n      // 先按引用量排序，再去统计分组的排序，这个时间消耗其实还挺大的。\n      papers.sort((a, b) => b[compareAttr] - a[compareAttr]);\n\n      // 开始计算位置\n      this.computedPosition(papers);\n      await this.initPublicTags(papers);\n\n      runInAction(() => {\n        this.papers = papers;\n      });\n    },\n    setPaper(doi, attr, value) {\n      const paper = this.papers.find((p) => p.DOI === doi);\n      paper[attr] = value;\n      // if (attr === \"read\") {\n      //   if (value) {\n      //     paper.privateTags.push(\"read\");\n      //   } else {\n      //     paper.privateTags = [...paper.privateTags].filter(\n      //       (a) => a !== \"read\"\n      //     );\n      //   }\n      // }\n      debug && console.log(\"==> 更新paper数据 by doi:\", doi, attr, value);\n      // attr === \"publicTags\" && setPublicTags(doi, value);\n      attr2func[attr]({\n        uid: this.userId,\n        pid: doi,\n        paper: toJS(paper),\n      });\n      this.doiUpdateColors(doi);\n    },\n    unitXAttr: \"Year\",\n    get unitXAttrList() {\n      const xAttrSet = new Set();\n      this.papers.forEach((paper) => {\n        xAttrSet.add(paper[this.unitXAttr]);\n      });\n      const xAttrList = Array.from(xAttrSet);\n      xAttrList.sort((a, b) => b - a);\n      return xAttrList;\n    },\n    unitYAttr: \"Conference\",\n    get unitYAttrList() {\n      return [\"SciVis\", \"InfoVis\", \"VAST\", \"PacificVis\"];\n      // const yAttrSet = new Set();\n      // this.papers.forEach((paper) => {\n      //   yAttrSet.add(paper[this.unitYAttr]);\n      // });\n      // const yAttrList = Array.from(yAttrSet);\n      // yAttrList.sort();\n      // return yAttrList;\n    },\n    maxUnitBlockPaperCount: 0,\n    unitBlockCount: {},\n    computedPosition(papers) {\n      // 每一个block有多少单元\n      const unitBlockCount = {};\n      papers.forEach((paper) => {\n        const xAttr = paper[this.unitXAttr];\n        const yAttr = paper[this.unitYAttr];\n        if (!(xAttr in unitBlockCount)) unitBlockCount[xAttr] = {};\n        if (!(yAttr in unitBlockCount[xAttr])) unitBlockCount[xAttr][yAttr] = 0;\n        paper.unitIndex = unitBlockCount[xAttr][yAttr];\n        unitBlockCount[xAttr][yAttr] += 1;\n      });\n      this.maxUnitBlockPaperCount =\n        Math.max(...papers.map((paper) => paper.unitIndex)) * 0.6;\n      this.unitBlockCount = unitBlockCount;\n    },\n\n    async initPublicTags(papers) {\n      const publicTags = await getPublicTags();\n      papers.forEach((paper) => {\n        if (paper.DOI in publicTags) {\n          paper.publicTags = publicTags[paper.DOI].filter((a) => a);\n        }\n      });\n      runInAction(() => {\n        this.commonPublicTags = mostCommon(Object.values(publicTags));\n      });\n    },\n    async initPrivateTags() {\n      const privateTags = await getPrivateTags({ uid: this.userId });\n\n      runInAction(() => {\n        this.papers.forEach((paper) => {\n          if (paper.DOI in privateTags) {\n            const readIndex = privateTags[paper.DOI].indexOf(\"read\");\n            if (readIndex > -1) {\n              paper.read = true;\n              privateTags[paper.DOI].splice(readIndex, 1);\n            }\n            paper.privateTags = privateTags[paper.DOI].filter((a) => a);\n          }\n        });\n        this.commonPrivateTags = mostCommon(Object.values(privateTags));\n      });\n\n      this.batchUpdateColors();\n    },\n\n    userId: \"\",\n    setUserId(userId) {\n      if (userId !== this.userId) {\n        this.userId = userId;\n        debug && console.log(\"==> change userId:\", this.userId);\n        localStorage.setItem(\"paper-management-system-userId\", userId);\n        userId && this.initPrivateTags();\n      }\n    },\n    initUserId() {\n      const userId = localStorage.getItem(\"paper-management-system-userId\");\n      userId && this.setUserId(userId);\n    },\n\n    get controlTagNameList() {\n      return [\n        {\n          label: \"Country\",\n          value: \"countries\",\n          list: this.commonCountries.slice(0, 8).concat([\"Japan\", \"Korea\"]),\n        },\n        {\n          label: \"Author\",\n          value: \"authors\",\n          list: this.commonAuthors,\n        },\n        {\n          label: \"Private Tag\",\n          value: \"privateTags\",\n          list: [\"read\"].concat(this.commonPrivateTags),\n          // list: this.commonPrivateTags,\n        },\n        {\n          label: \"Public Tag\",\n          value: \"publicTags\",\n          list: this.commonPublicTags,\n        },\n      ];\n    },\n    activeTags: {\n      countries: [],\n      authors: [],\n      privateTags: [],\n      publicTags: [],\n    },\n    // 判断 至少有一个控制器被激活\n    get controlIsActive() {\n      let ans = false;\n      for (let key in this.activeTags) {\n        if (this.activeTags[key].length > 0) {\n          ans = true;\n        }\n      }\n      return ans;\n    },\n    tag2color: {},\n    colorUse: {},\n    setTagColor(tag, category) {\n      debug && console.log(\"==> 设置tag颜色:\", category, tag);\n      const fullTag = `${category}---${tag}`;\n      if (fullTag in this.tag2color) {\n        // 回收该颜色\n        this.colorUse[this.tag2color[fullTag]] = false;\n        delete this.tag2color[fullTag];\n        this.activeTags[category] = [...this.activeTags[category]].filter(\n          (a) => a !== tag\n        );\n      } else {\n        // 分配一个新的颜色\n        this.activeTags[category].push(tag);\n        let i = 0;\n        let _color = d3.schemeTableau10[i];\n        while (this.colorUse[_color]) {\n          i += 1;\n          if (i === 10) {\n            _color = \"black\";\n            break;\n          }\n          _color = d3.schemeTableau10[i];\n        }\n        this.tag2color[fullTag] = _color;\n        this.colorUse[_color] = true;\n      }\n      this.batchUpdateColors();\n    },\n    batchUpdateColors() {\n      this.papers.forEach((paper) => {\n        paper.colors = [];\n        this.updateColor(paper);\n      });\n    },\n    doiUpdateColors(doi) {\n      const paper = this.papers.find((p) => p.DOI === doi);\n      paper.colors = [];\n      this.updateColor(paper);\n    },\n    updateColor(paper) {\n      const isReadTagActive = this.activeTags.privateTags.indexOf(\"read\") > -1;\n      for (let category in this.activeTags) {\n        const hightlightAttrs = this.activeTags[category];\n        hightlightAttrs.forEach((attr) => {\n          if (paper[category].indexOf(attr) > -1) {\n            const fullTag = `${category}---${attr}`;\n            paper.colors.push(this.tag2color[fullTag]);\n          }\n          if (isReadTagActive && paper.read) {\n            paper.colors.push(this.tag2color[\"privateTags---read\"]);\n          }\n        });\n      }\n    },\n    maxCitationCount: 200,\n\n    currentSelected: \"\",\n    isSelected: false,\n    setCurrentSelected(doi) {\n      debug && console.log(\"==> 选中文章:\", doi);\n      this.currentSelected = doi;\n      this.isSelected = !!doi\n    },\n    cancelSelect() {\n      debug && console.log(\"==> 点击背景，取消论文选中状态\");\n      this.isSelected = false;\n    },\n    get currentSelectedPaper() {\n      return this.papers.find((paper) => paper.DOI === this.currentSelected);\n    },\n  };\n};\n\nexport default createStore;\n","import React from \"react\";\nimport createStore from \"./createStoreV0128\";\nimport { useLocalObservable } from \"mobx-react-lite\";\n\nconst storeContext = React.createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  const store = useLocalObservable(createStore);\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const useGlobalStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    throw new Error(\"no Provider\");\n  }\n  return store;\n};\n","import React, { useState } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\n// import { toJS } from \"mobx\";\n\nconst ControlView = observer(() => {\n  const store = useGlobalStore();\n  const { controlTagNameList } = store;\n  return (\n    <div className=\"control-view\">\n      {controlTagNameList.map((tag) => (\n        <ControlItem key={tag.label} tagData={tag} />\n      ))}\n    </div>\n  );\n});\n\nexport default ControlView;\n\nconst ControlItem = observer(({ tagData }) => {\n  const store = useGlobalStore();\n  const { tag2color } = store;\n\n  const [tags, setTags] = useState([]);\n  const handleClickOption = (value) => {\n    const currentTags = [...tags];\n    const index = currentTags.indexOf(value);\n    if (index > -1) {\n      currentTags.splice(index, 1);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    } else {\n      currentTags.push(value);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    }\n  };\n\n  return (\n    <div className=\"control-item\">\n      <div className=\"control-item-title\">{tagData.label}</div>\n      <div className=\"control-item-options\">\n        {tagData.list.map((item) => (\n          <ControlOption\n            key={item}\n            value={item}\n            clickOption={handleClickOption}\n            isSelect={\n              tags.indexOf(item) > -1 && tag2color[`${tagData.value}---${item}`]\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nconst ControlOption = ({ value, clickOption, isSelect }) => {\n  const className = [\"control-item-option\", isSelect && \"option-active\"]\n    .filter((a) => a)\n    .join(\" \");\n  const style = isSelect\n    ? { background: isSelect, border: `1px solid ${isSelect}` }\n    : {};\n  return (\n    <div className={className} onClick={() => clickOption(value)} style={style}>\n      {value}\n    </div>\n  );\n};\n","import React from \"react\";\n// import * as d3 from \"d3\";\n// import { useGlobalStore } from \"../../Store\";\n// import { observer } from \"mobx-react-lite\";\n\nconst CircleUnit = React.memo(\n  ({ cx, cy, r, colors, opacity, doi, handleClick, isSelect, title }) => {\n    const stepAngle = (2 * Math.PI) / colors.length;\n    const polarX = (angle) => cx + Math.sin(angle) * r;\n    const polarY = (angle) => cy + Math.cos(angle) * r;\n    const points = colors.map((_, i) => ({\n      startX: polarX(stepAngle * i),\n      startY: polarY(stepAngle * i),\n      endX: polarX(stepAngle * (i + 1)),\n      endY: polarY(stepAngle * (i + 1)),\n    }));\n\n    const borderOpacity = isSelect ? 1 : 0;\n\n    return (\n      <g id=\"unit-g\" onClick={(e) => handleClick(e, doi)} cursor=\"pointer\">\n        <title>{title}</title>\n        <g id=\"unit-border-g\">\n          <circle\n            cx={cx}\n            cy={cy}\n            r={1.4 * r}\n            fill=\"none\"\n            stroke=\"red\"\n            strokeWidth={0.6 * r}\n            opacity={borderOpacity}\n          />\n        </g>\n        <g id=\"unit-sector-g\" opacity={opacity}>\n          {points.length > 1 ? (\n            points.map((point, i) => (\n              <path\n                key={i}\n                d={`M ${cx} ${cy}\n              L ${point.startX} ${point.startY}\n              A ${r} ${r} 0 0 0 ${point.endX} ${point.endY}\n              Z\n              `}\n                stroke=\"white\"\n                fill={colors[i]}\n                strokeWidth={0.1 * r}\n                // fill-opacity=\"0.2\"\n              />\n            ))\n          ) : (\n            <circle\n              cx={cx}\n              cy={cy}\n              r={r}\n              fill={colors[0]}\n              // stroke=\"red\"\n              // strokeWidth={0.15 * r}\n            />\n          )}\n        </g>\n      </g>\n    );\n  }\n);\n\nexport default CircleUnit;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport CircleUnit from \"./CircleUnit\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\nimport { get } from \"lodash\";\nimport * as d3 from \"d3\";\n\nconst unitLayoutPadding = {\n  top: 30,\n  left: 40,\n  right: 15,\n  bottom: 1,\n};\n\nconst unitBlockPadding = {\n  top: 2,\n  left: 3,\n  right: 3,\n  bottom: 1,\n};\n\nconst UnitView = observer(() => {\n  const store = useGlobalStore();\n  const {\n    papers,\n    unitXAttr,\n    unitYAttr,\n    unitXAttrList,\n    unitYAttrList,\n    unitBlockCount,\n    maxUnitBlockPaperCount,\n    // doi2paperBlockPos,\n    // doi2privateTags,\n    // doi2publicTags,\n    // doi2comments,\n    // doi2colors,\n    controlIsActive,\n    currentSelected,\n    setCurrentSelected,\n    isSelected,\n    cancelSelect,\n  } = store;\n\n  // const svg = document.querySelector(\"#unit-svg\");\n  // const svgWidth =\n  //   svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right;\n  // const svgHeight =\n  //   svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom;\n\n  const [svgWidth, setSvgWidth] = useState(0);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n  // 初始化svg长宽\n  useEffect(() => {\n    const svg = document.querySelector(\"#unit-svg\");\n    setSvgWidth(\n      svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right\n    );\n    setSvgHeight(\n      svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom\n    );\n  }, []);\n  const unitBlockWidth =\n    unitXAttrList.length > 0\n      ? svgWidth / unitXAttrList.length -\n        unitBlockPadding.left -\n        unitBlockPadding.right\n      : 0;\n  const unitBlockHeight =\n    unitYAttrList.length > 0\n      ? svgHeight / unitYAttrList.length -\n        unitBlockPadding.top -\n        unitBlockPadding.bottom\n      : 0;\n  // console.log(unitBlockWidth, unitBlockHeight);\n\n  const aspectRatio = Math.floor(\n    unitBlockWidth > 0 ? unitBlockHeight / unitBlockWidth : 1\n  );\n\n  const blockCountX = Math.ceil(\n    Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n  );\n  // console.log('blockCountX', blockCountX);\n\n  const xAttr2blockCountX = unitXAttrList.map((xAttr, i) => {\n    const maxColumnBlockCount = Math.max(\n      ...unitYAttrList.map((yAttr, j) => get(unitBlockCount, [xAttr, yAttr], 0))\n    );\n    let blockCountX = Math.ceil(\n      Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n    );\n    if (maxColumnBlockCount > maxUnitBlockPaperCount) {\n      blockCountX += 1;\n    }\n    return blockCountX;\n  });\n  // console.log(\"xAttr2blockCountX\", xAttr2blockCountX);\n\n  // const blockCountY = Math.ceil(aspectRatio * blockCountX);\n\n  let r = unitBlockWidth / blockCountX;\n  // console.log(\"r\", r);\n\n  const xAttr2blockCountX_StartCount = [0];\n  const xAttr2blockCountX_StartPos = [0];\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartCount.push(\n      xAttr2blockCountX_StartCount[i - 1] + xAttr2blockCountX[i - 1]\n    );\n  }\n\n  r =\n    (svgWidth -\n      (unitBlockPadding.left + unitBlockPadding.right) * unitXAttrList.length) /\n    (xAttr2blockCountX_StartCount[xAttr2blockCountX_StartCount.length - 1] +\n      xAttr2blockCountX[xAttr2blockCountX.length - 1]);\n  // console.log(\"new r\", r);\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartPos.push(\n      xAttr2blockCountX_StartCount[i] * r +\n        (unitBlockPadding.left + unitBlockPadding.right) * i\n    );\n  }\n  // console.log(\"xAttr2blockCountX_StartCount\", xAttr2blockCountX_StartCount);\n  // console.log(\"xAttr2blockCountX_StartPos\", xAttr2blockCountX_StartPos);\n  const scale = d3.scaleLinear().domain([0, 100]).range([0.25, 0.8]);\n  const citeCount2grey = (count) => d3.interpolateGreys(scale(count));\n  const paperCircles = papers.map((paper) => {\n    const paperCircle = {};\n    paperCircle.oriData = toJS(paper);\n\n    paperCircle.BlockIndexX = unitXAttrList.indexOf(paper[unitXAttr]);\n    paperCircle.BlockIndexY = unitYAttrList.indexOf(paper[unitYAttr]);\n\n    const doi = paper.DOI;\n    paperCircle.doi = doi;\n\n    paperCircle.circleIndexX =\n      paper.unitIndex % xAttr2blockCountX[paperCircle.BlockIndexX];\n    paperCircle.circleIndexY = Math.floor(\n      paper.unitIndex / xAttr2blockCountX[paperCircle.BlockIndexX]\n    );\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      paperCircle.BlockIndexX *\n        (unitBlockWidth + unitBlockPadding.left + unitBlockPadding.right) +\n      (paperCircle.circleIndexX + 0.5) * r;\n    paperCircle.cy =\n      unitLayoutPadding.top +\n      paperCircle.BlockIndexY *\n        (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) +\n      (paperCircle.circleIndexY + 0.5) * r;\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      xAttr2blockCountX_StartPos[paperCircle.BlockIndexX] +\n      (paperCircle.circleIndexX + 0.5) * r;\n\n    paperCircle.citationGrey = citeCount2grey(paper.CitationCount);\n    paperCircle.activeColors = paper.colors;\n    paperCircle.colors =\n      paperCircle.activeColors.length > 0\n        ? paperCircle.activeColors\n        : [paperCircle.citationGrey];\n\n    paperCircle.opacity = controlIsActive\n      ? paperCircle.activeColors.length > 0\n        ? 0.8\n        : 0.4\n      : 0.8;\n\n    paperCircle.title = paper.Title;\n\n    return paperCircle;\n  });\n\n  const xLabels = unitXAttrList.map((xAttr, i) => {\n    const startX = unitLayoutPadding.left + xAttr2blockCountX_StartPos[i];\n    const middleX = startX + (xAttr2blockCountX[i] * r) / 2;\n    return {\n      value: xAttr,\n      x: middleX,\n      y: unitLayoutPadding.top * 0.8,\n    };\n  });\n\n  const yLabels = unitYAttrList.map((yAttr, i) => {\n    const startY =\n      unitLayoutPadding.top +\n      (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) * i;\n    return {\n      value: yAttr,\n      x: unitLayoutPadding.left * 0.35,\n      y: startY,\n    };\n  });\n\n  const handleClickPaper = (e, doi) => {\n    // console.log(\"click\", e, doi);\n    e.stopPropagation();\n    setCurrentSelected(doi);\n  };\n\n  const handleClickBackground = () => {\n    cancelSelect();\n  };\n\n  return (\n    <div className=\"unit-view\">\n      <svg\n        id=\"unit-svg\"\n        width=\"100%\"\n        height=\"100%\"\n        onClick={handleClickBackground}\n      >\n        <g id=\"units\">\n          {r > 0 &&\n            paperCircles.map((paper, i) => (\n              <CircleUnit\n                key={i}\n                cx={paper.cx}\n                cy={paper.cy}\n                r={r / 2.4}\n                // grey={paper.citationGrey}\n                // oriData={paper.oriData}\n                doi={paper.doi}\n                colors={paper.colors}\n                opacity={paper.opacity}\n                handleClick={handleClickPaper}\n                isSelect={isSelected && currentSelected === paper.doi}\n                title={paper.title}\n              />\n            ))}\n        </g>\n        <g id=\"x-label\">\n          {r > 0 &&\n            xLabels.map((label) => (\n              <text\n                key={label.value}\n                x={label.x}\n                y={label.y}\n                textAnchor=\"middle\"\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n        <g id=\"y-label\">\n          {r > 0 &&\n            yLabels.map((label) => (\n              <text\n                key={label.value}\n                // x={label.x}\n                // y={label.y}\n                // textAnchor=\"start\"\n                transform={`translate(${label.x}, ${label.y}) rotate(90)`}\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n      </svg>\n    </div>\n  );\n});\n\nexport default UnitView;\n","import React, { useState, useRef } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { get } from \"lodash\";\nimport { Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Tag, Input } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { toJS } from \"mobx\";\n\nconst debug = true;\n\nconst DetailView = observer(() => {\n  const store = useGlobalStore();\n  const { currentSelectedPaper, setPaper } = store;\n  const paper = currentSelectedPaper;\n  debug && console.log(\"currentSelectedPaper\", toJS(currentSelectedPaper));\n  if (!currentSelectedPaper) {\n    return <div></div>;\n  }\n\n  const doi = get(paper, \"DOI\", \"\");\n\n  const editTags = [\n    {\n      title: \"Private Tags\",\n      value: \"privateTags\",\n      initTags: get(paper, \"privateTags\", []),\n    },\n    {\n      title: \"Public Tags\",\n      value: \"publicTags\",\n      initTags: get(paper, \"publicTags\", []),\n    },\n  ];\n  const handleChangeTags = (attr, value) => {\n    doi && setPaper(doi, attr, value);\n  };\n  const handleChangeRead = (value) => {\n    setPaper(doi, \"read\", value);\n  };\n  return (\n    <div className=\"detail-view\" key={doi}>\n      {paper && (\n        <>\n          <div className=\"detail-title\">{paper.Title}</div>\n          <div className=\"detail-authors\">\n            {get(paper, \"authors\", []).join(\"; \")} ({paper.Year})\n          </div>\n          <div className=\"detail-edit-tags\">\n            <div className=\"detail-edit-read\">\n              <div className=\"detail-edit-title\">Read</div>\n              <Switch\n                size=\"small\"\n                checkedChildren={<CheckOutlined />}\n                unCheckedChildren={<CloseOutlined />}\n                defaultChecked={get(paper, \"read\", false)}\n                onChange={handleChangeRead}\n              />\n            </div>\n            {editTags.map((editTag) => (\n              <DetailEditTags\n                key={editTag.value}\n                title={editTag.title}\n                initTags={editTag.initTags}\n                handleChangeTags={(value) =>\n                  handleChangeTags(editTag.value, value)\n                }\n              />\n            ))}\n          </div>\n          <div className=\"detail-attrs\">\n            <DetailItem paper={paper} label={\"AuthorKeywords\"} />\n            <DetailItem paper={paper} label={\"DOI\"} />\n            <DetailItem paper={paper} label={\"AuthorAffiliation\"} />\n            <DetailItem paper={paper} label={\"Abstract\"} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default DetailView;\n\nconst DetailItem = ({ paper, label }) => (\n  <div className=\"detail-attr\">\n    <div className=\"detail-key\">{label}:</div>\n    <div className=\"detail-content\">{get(paper, label, \"\")}</div>\n  </div>\n);\n\nconst DetailEditTags = ({ title, initTags, handleChangeTags }) => {\n  const [tags, _setTags] = useState(initTags);\n  const setTags = (newTags) => {\n    handleChangeTags(newTags);\n    _setTags(newTags);\n  };\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  // const [editInput, setEditInput] = useState();\n  // const saveEditInputRef = (input) => setEditInput(input);\n  const input = useRef();\n  // const saveInputRef = (input) => setInput(input);\n\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputConfirm = () => {\n    if (inputValue && tags.indexOf(inputValue) < 0) {\n      setTags([...tags, inputValue]);\n      setInputVisible(false);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleClose = (removeTag) => {\n    setTags(tags.filter((tag) => tag !== removeTag));\n  };\n\n  const [inputVisible, setInputVisible] = useState(false);\n  const showInput = () => {\n    setInputVisible(true);\n    // input.focus();\n  };\n  return (\n    <div className=\"detail-edit-tag\">\n      <div className=\"detail-edit-title\">{title}:</div>\n      <div className=\"detail-edit-tags\">\n        <>\n          {tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  // ref={saveEditInputRef}\n                  key={tag}\n                  size=\"small\"\n                  className=\"tag-input\"\n                  value={editInputValue}\n                  onchange={(e) => setEditInputValue(e.target.value)}\n                  onBlur={handleEditInputConfirm}\n                  onPressEnter={handleEditInputConfirm}\n                />\n              );\n            }\n\n            const tagElem = (\n              <Tag\n                className=\"edit-tag\"\n                key={tag}\n                closable={true}\n                onClose={() => handleClose(tag)}\n              >\n                <span\n                // onDoubleClick={(e) => {\n                //   setEditInputIndex(index);\n                //   setEditInputValue(tag);\n                //   editInput.focus();\n                //   e.preventDefault();\n                // }}\n                >\n                  {tag}\n                </span>\n              </Tag>\n            );\n            return tagElem;\n          })}\n          {inputVisible && (\n            <Input\n              ref={input}\n              type=\"text\"\n              size=\"small\"\n              className=\"tag-input\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onBlur={handleInputConfirm}\n              onPressEnter={handleInputConfirm}\n            />\n          )}\n          {!inputVisible && (\n            <Tag className=\"site-tag-plus\" onClick={showInput}>\n              <PlusOutlined /> New Tag\n            </Tag>\n          )}\n        </>\n      </div>\n    </div>\n  );\n};\n","export const userList = [\n  \"Prof. Yuan\",\n  \"Guozheng Li\",\n  \"Shuai Chen\",\n  \"Chenglei Yue\",\n  \"Ruike Jiang\",\n  \"Can Liu\",\n  \"Jincheng Li\",\n  \"Chaofan Yang\",\n  \"Hanning Shao\",\n  \"Yuchu Luo\",\n  \"Zhixian Lin\",\n  \"Min Tian\",\n  \"Dingyi Yang\",\n  \"Changhe Yang\",\n  \"Yanda Li\",\n  \"Datong Wei\",\n  \"Cong Wu\",\n  \"Hao Wu\",\n  \"Shaocong Tan\",\n  \"Jiacheng Yu\",\n  \"Sihang Li\",\n  \"Zhen Li\",\n  \"Haohua Liu\",\n  \"KaiChen Nie\"\n];\n\nexport default userList;\n","import React from \"react\";\nimport \"./index.scss\";\nimport userList from \"../../Common/userList\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\n\nconst Header = observer(() => {\n  const store = useGlobalStore();\n  const handleChange = (userId) => {\n    store.setUserId(userId);\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Paper Management System</div>\n      <div className=\"user-selector title\">\n        User: &nbsp;\n        <Select\n          value={store.userId}\n          size=\"small\"\n          onChange={handleChange}\n          style={{ width: 130 }}\n          placeholder=\"Set User\"\n        >\n          {userList.map((user) => (\n            <Option value={user} key={user}>\n              {user}\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n});\n\nexport default Header;\n","import \"./App.scss\";\nimport { StoreProvider, useGlobalStore } from \"./Store\";\n// import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport ControlView from \"./Views/ControlView\";\nimport UnitView from \"./Views/UnitView\";\nimport DetailView from \"./Views/DetailView\";\nimport Header from \"./Views/Header\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <ViewContainer />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n\n// init data\nconst ViewContainer = () => {\n  const store = useGlobalStore();\n  useEffect(() => {\n    const fetchPapers = async () => {\n      const papers = await d3.csv(\"data.csv\");\n      await store.setPapers(papers);\n      store.initUserId();\n    };\n    fetchPapers();\n  }, [store]);\n  return (\n    <div className=\"view-container\">\n      <div className=\"header-container\">\n        <Header />\n      </div>\n      <div className=\"main-container\">\n        <div className=\"control-main-container\">\n          <div className=\"control-view-container\">\n            <ControlView />\n          </div>\n          <div className=\"unit-view-container\">\n            <UnitView />\n          </div>\n        </div>\n        <div className=\"detail-view-container\">\n          <DetailView />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}