{"version":3,"sources":["Store/createStore.js","Store/index.js","Views/ControlView/index.js","Views/UnitView/CircleUnit.js","Views/UnitView/index.js","Views/DetailView/index.js","Common/userList.js","Views/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["createStore","papers","unitBlockCount","maxUnitBlockPaperCount","doi2paperBlockPos","author2Count","authorCountList","countryCountList","doi2papers","setPapers","compareAttr","country2Count","forEach","paper","i","DOI","CitationCount","authors","AuthorNames","split","map","a","trim","author","Countries","countries","s","part","length","filter","country","privateTags","publicTags","this","push","value","count","sort","b","doi","xAttr","unitXAttr","yAttr","unitYAttr","setPaper","attr","setUnitXAttr","attrName","xAttrSet","Set","add","xAttrList","Array","from","setUnitYAttr","userId","setUserId","label","list","slice","concat","activeTags","tag2color","colorUse","setTagColor","tag","key","_color","d3","ans","doi2colors","keyAttr","indexOf","isArray","doi2privateTags","doi2publicTags","doi2comments","maxCitationCount","currentSelected","setCurrentSelected","storeContext","React","createContext","StoreProvider","children","store","useLocalObservable","Provider","useGlobalStore","useContext","Error","ControlView","observer","controlTagNameList","className","ControlItem","tagData","useState","tags","setTags","handleClickOption","currentTags","index","splice","item","clickOption","isSelect","ControlOption","join","style","background","border","onClick","CircleUnit","memo","cx","cy","r","colors","opacity","handleClick","title","stepAngle","Math","PI","polarX","angle","sin","polarY","cos","points","_","startX","startY","endX","endY","borderOpacity","id","cursor","fill","stroke","strokeWidth","point","d","UnitView","unitXAttrList","unitYAttrList","controlIsActive","svgWidth","setSvgWidth","svgHeight","setSvgHeight","useEffect","svg","document","querySelector","clientWidth","unitLayoutPadding","left","right","clientHeight","top","bottom","unitBlockPadding","unitBlockWidth","unitBlockHeight","aspectRatio","floor","blockCountX","ceil","sqrt","xAttr2blockCountX","maxColumnBlockCount","max","j","get","xAttr2blockCountX_StartCount","xAttr2blockCountX_StartPos","scale","domain","range","paperCircles","paperCircle","oriData","toJS","BlockIndexX","BlockIndexY","circleIndexX","circleIndexY","citationGrey","activeColors","Title","xLabels","x","y","yLabels","handleClickPaper","console","log","width","height","textAnchor","fontSize","transform","DetailView","currentSelectedPaper","editTags","initTags","Year","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","editTag","handleChangeTags","DetailItem","DetailEditTags","_setTags","newTags","editInputIndex","setEditInputIndex","setEditInput","saveEditInputRef","input","useRef","editInputValue","setEditInputValue","handleEditInputConfirm","inputValue","setInputValue","handleInputConfirm","setInputVisible","inputVisible","ref","onchange","e","target","onBlur","onPressEnter","closable","onClose","removeTag","type","PlusOutlined","userList","Option","Select","Header","placeholder","user","App","ViewContainer","fetchPapers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86961a49.chunk.js","sourcesContent":["import * as d3 from \"d3\";\nimport { toJS } from \"mobx\";\n\nconst debug = false;\n\nconst createStore = () => {\n  return {\n    papers: [],\n    unitBlockCount: {},\n    maxUnitBlockPaperCount: 0,\n    doi2paperBlockPos: {},\n    author2Count: {},\n    authorCountList: [],\n    countryCountList: [],\n    doi2papers: {},\n    setPapers(papers, compareAttr = \"CitationCount\") {\n      const author2Count = {};\n      const country2Count = {};\n      papers.forEach((paper, i) => {\n        if (paper.DOI === \"#\") {\n          paper.DOI = `tmp-${i}`;\n        }\n\n        if (paper.CitationCount === \"\") {\n          paper.CitationCount = 0;\n        }\n        paper.authors = paper.AuthorNames.split(\";\").map((a) => a.trim());\n        paper.authors.forEach((author) => {\n          if (author in author2Count) {\n            author2Count[author] += 1;\n          } else {\n            author2Count[author] = 1;\n          }\n        });\n        paper.Countries = paper.Countries === \"#\" ? \"\" : paper.Countries;\n        paper.Countries = paper.Countries === \"###\" ? \"\" : paper.Countries;\n        paper.countries = paper.Countries.split(\";\")\n          .map((s) => {\n            const part = s.trim().split(\" \");\n            return part.length === 0 ? \"\" : part[part.length - 1].trim();\n          })\n          .filter((a) => a);\n        paper.countries.forEach((country) => {\n          if (country in country2Count) {\n            country2Count[country] += 1;\n          } else {\n            country2Count[country] = 1;\n          }\n        });\n        paper.privateTags = [];\n        paper.publicTags = [];\n        this.doi2papers[paper.DOI] = paper;\n      });\n      this.author2Count = author2Count;\n      const authorCountList = [];\n      for (let author in author2Count) {\n        authorCountList.push({\n          value: author,\n          count: author2Count[author],\n        });\n      }\n      authorCountList.sort((a, b) => b.count - a.count);\n      const countryCountList = [];\n      for (let country in country2Count) {\n        countryCountList.push({\n          value: country,\n          count: country2Count[country],\n        });\n      }\n      countryCountList.sort((a, b) => b.count - a.count);\n      this.authorCountList = authorCountList;\n      this.countryCountList = countryCountList;\n      // 先按引用量排序，再去统计分组的排序，这个时间消耗其实还挺大的。\n      papers.sort((a, b) => b[compareAttr] - a[compareAttr]);\n      this.papers = papers;\n\n      let unitBlockCount = {};\n      let maxUnitBlockPaperCount = 0;\n      this.papers.forEach((paper) => {\n        const doi = paper.DOI;\n        const xAttr = paper[this.unitXAttr];\n        const yAttr = paper[this.unitYAttr];\n        if (!(xAttr in unitBlockCount)) {\n          unitBlockCount[xAttr] = {};\n        }\n        if (!(yAttr in unitBlockCount[xAttr])) {\n          unitBlockCount[xAttr][yAttr] = 0;\n        }\n        this.doi2paperBlockPos[doi] = unitBlockCount[xAttr][yAttr];\n\n        unitBlockCount[xAttr][yAttr] += 1;\n        if (maxUnitBlockPaperCount < unitBlockCount[xAttr][yAttr]) {\n          maxUnitBlockPaperCount = unitBlockCount[xAttr][yAttr];\n        }\n      });\n      this.maxUnitBlockPaperCount = maxUnitBlockPaperCount * 0.6;\n      this.unitBlockCount = unitBlockCount;\n      // this.maxUnitBlockPaperCount = 90;\n    },\n    setPaper(doi, attr, value) {\n      const paper = this.doi2papers[doi]\n      paper[attr] = value\n    },\n    get paperCount() {\n      return this.papers.length;\n    },\n\n    unitXAttr: \"Year\",\n    setUnitXAttr(attrName) {\n      this.unitXAttr = attrName;\n    },\n    get unitXAttrList() {\n      const xAttrSet = new Set();\n      this.papers.forEach((paper) => {\n        xAttrSet.add(paper[this.unitXAttr]);\n      });\n      const xAttrList = Array.from(xAttrSet);\n      xAttrList.sort((a, b) => b - a);\n      return xAttrList;\n    },\n    unitYAttr: \"Conference\",\n    setUnitYAttr(attrName) {\n      this.unitYAttr = attrName;\n    },\n    get unitYAttrList() {\n      return [\"SciVis\", \"InfoVis\", \"VAST\", \"PacificVis\"];\n      // const yAttrSet = new Set();\n      // this.papers.forEach((paper) => {\n      //   yAttrSet.add(paper[this.unitYAttr]);\n      // });\n      // const yAttrList = Array.from(yAttrSet);\n      // yAttrList.sort();\n      // return yAttrList;\n    },\n\n    userId: \"\",\n    setUserId(userId) {\n      this.userId = userId;\n      debug && console.log(\"change userId\", this.userId);\n    },\n\n    get controlTagNameList() {\n      return [\n        {\n          label: \"Country\",\n          value: \"countries\",\n          // list: [\"USA\", \"China\", \"Japan\", \"Korea\"],\n          list: this.countryCountList\n            .slice(0, 6)\n            .map((attr) => attr.value)\n            .concat([\"Japan\", \"Korea\"]),\n        },\n        {\n          label: \"Author\",\n          value: \"authors\",\n          list: this.authorCountList.slice(0, 8).map((attr) => attr.value),\n        },\n        {\n          label: \"Private Tag\",\n          value: \"privateTags\",\n          list: [\"Read\", \"literature\", \"influence\"],\n        },\n        {\n          label: \"Public Tag\",\n          value: \"publicTags\",\n          list: [\"Classic\", \"China\", \"Japan\", \"Korea\"],\n        },\n      ];\n    },\n    activeTags: {\n      countries: [],\n      authors: [],\n      privateTags: [],\n      publicTags: [],\n    },\n    tag2color: {},\n    colorUse: {},\n    setTagColor(tag, key) {\n      if (tag in this.tag2color) {\n        this.colorUse[this.tag2color[tag]] = false;\n        delete this.tag2color[tag];\n        this.activeTags[key] = [...this.activeTags[key]].filter(\n          (a) => a !== tag\n        );\n      } else {\n        if (this.activeTags[key]) {\n          this.activeTags[key].push(tag);\n        } else {\n          this.activeTags[key] = [tag];\n        }\n        // console.log(\"activeTags\", toJS(this.activeTags));\n        let i = 0;\n        let _color = d3.schemeTableau10[i];\n        while (this.colorUse[_color]) {\n          i += 1;\n          if (i === 10) {\n            _color = \"black\";\n            break;\n          }\n          _color = d3.schemeTableau10[i];\n        }\n        this.tag2color[tag] = _color;\n        this.colorUse[_color] = true;\n      }\n    },\n\n    get controlIsActive() {\n      let ans = false;\n      for (let key in this.activeTags) {\n        if (this.activeTags[key].length > 0) {\n          ans = true;\n        }\n      }\n      return ans;\n    },\n\n    get doi2colors() {\n      const doi2colors = {};\n      this.papers.forEach((paper) => {\n        for (let keyAttr in this.activeTags) {\n          const hightlightAttrs = this.activeTags[keyAttr];\n          hightlightAttrs.forEach((attr) => {\n            if (paper[keyAttr].indexOf(attr) > -1) {\n              if (\n                paper.DOI in doi2colors &&\n                Array.isArray(doi2colors[paper.DOI])\n              ) {\n                doi2colors[paper.DOI].push(this.tag2color[attr]);\n              } else {\n                doi2colors[paper.DOI] = [this.tag2color[attr]];\n              }\n            }\n          });\n        }\n      });\n      return doi2colors;\n    },\n\n    doi2privateTags: {},\n    doi2publicTags: {},\n    doi2comments: {},\n\n    maxCitationCount: 200,\n\n    currentSelected: \"\",\n    setCurrentSelected(doi) {\n      this.currentSelected = doi;\n    },\n    get currentSelectedPaper() {\n      return this.doi2papers[this.currentSelected];\n    },\n  };\n};\n\nexport default createStore;\n","import React from \"react\";\nimport createStore from \"./createStore\";\nimport { useLocalObservable } from \"mobx-react-lite\";\n\nconst storeContext = React.createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  const store = useLocalObservable(createStore);\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const useGlobalStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    throw new Error(\"no Provider\");\n  }\n  return store;\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\n\nconst ControlView = observer(() => {\n  const store = useGlobalStore();\n  const { controlTagNameList } = store;\n  return (\n    <div className=\"control-view\">\n      {controlTagNameList.map((tag) => (\n        <ControlItem key={tag.label} tagData={tag} />\n      ))}\n    </div>\n  );\n});\n\nexport default ControlView;\n\nconst ControlItem = observer(({ tagData }) => {\n  const store = useGlobalStore();\n  const { tag2color } = store;\n\n  const [tags, setTags] = useState([]);\n  const handleClickOption = (value) => {\n    const currentTags = [...tags];\n    const index = currentTags.indexOf(value);\n    if (index > -1) {\n      currentTags.splice(index, 1);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    } else {\n      currentTags.push(value);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    }\n  };\n\n  return (\n    <div className=\"control-item\">\n      <div className=\"control-item-title\">{tagData.label}</div>\n      <div className=\"control-item-options\">\n        {tagData.list.map((item) => (\n          <ControlOption\n            key={item}\n            value={item}\n            clickOption={handleClickOption}\n            isSelect={tags.indexOf(item) > -1 && tag2color[item]}\n          />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nconst ControlOption = ({ value, clickOption, isSelect }) => {\n  const className = [\"control-item-option\", isSelect && \"option-active\"]\n    .filter((a) => a)\n    .join(\" \");\n  const style = isSelect\n    ? { background: isSelect, border: `1px solid ${isSelect}` }\n    : {};\n  return (\n    <div className={className} onClick={() => clickOption(value)} style={style}>\n      {value}\n    </div>\n  );\n};\n","import React from \"react\";\n// import * as d3 from \"d3\";\n// import { useGlobalStore } from \"../../Store\";\n// import { observer } from \"mobx-react-lite\";\n\nconst CircleUnit = React.memo(\n  ({ cx, cy, r, colors, opacity, doi, handleClick, isSelect, title }) => {\n    const stepAngle = (2 * Math.PI) / colors.length;\n    const polarX = (angle) => cx + Math.sin(angle) * r;\n    const polarY = (angle) => cy + Math.cos(angle) * r;\n    const points = colors.map((_, i) => ({\n      startX: polarX(stepAngle * i),\n      startY: polarY(stepAngle * i),\n      endX: polarX(stepAngle * (i + 1)),\n      endY: polarY(stepAngle * (i + 1)),\n    }));\n\n    const borderOpacity = isSelect ? 1 : 0;\n\n    return (\n      <g id=\"unit-g\" onClick={() => handleClick(doi)} cursor=\"pointer\">\n        <title>{title}</title>\n        <g id=\"unit-border-g\">\n          <circle\n            cx={cx}\n            cy={cy}\n            r={1.4 * r}\n            fill=\"none\"\n            stroke=\"red\"\n            strokeWidth={0.6 * r}\n            opacity={borderOpacity}\n          />\n        </g>\n        <g id=\"unit-sector-g\" opacity={opacity}>\n          {points.length > 1 ? (\n            points.map((point, i) => (\n              <path\n                key={i}\n                d={`M ${cx} ${cy}\n              L ${point.startX} ${point.startY}\n              A ${r} ${r} 0 0 0 ${point.endX} ${point.endY}\n              Z\n              `}\n                stroke=\"white\"\n                fill={colors[i]}\n                strokeWidth={0.1 * r}\n                // fill-opacity=\"0.2\"\n              />\n            ))\n          ) : (\n            <circle\n              cx={cx}\n              cy={cy}\n              r={r}\n              fill={colors[0]}\n              // stroke=\"red\"\n              // strokeWidth={0.15 * r}\n            />\n          )}\n        </g>\n      </g>\n    );\n  }\n);\n\nexport default CircleUnit;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport CircleUnit from \"./CircleUnit\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\nimport { get } from \"lodash\";\nimport * as d3 from \"d3\";\n\nconst UnitView = observer(() => {\n  const store = useGlobalStore();\n  const {\n    papers,\n    unitXAttr,\n    unitYAttr,\n    unitXAttrList,\n    unitYAttrList,\n    unitBlockCount,\n    maxUnitBlockPaperCount,\n    doi2paperBlockPos,\n    doi2privateTags,\n    doi2publicTags,\n    doi2comments,\n    doi2colors,\n    controlIsActive,\n    currentSelected,\n    setCurrentSelected,\n  } = store;\n\n  // console.log(\"doi2colors\", toJS(doi2colors));\n\n  // const svg = document.querySelector(\"#unit-svg\");\n  // const svgWidth =\n  //   svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right;\n  // const svgHeight =\n  //   svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom;\n\n  const [svgWidth, setSvgWidth] = useState(0);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n  // 初始化svg长宽\n  useEffect(() => {\n    const svg = document.querySelector(\"#unit-svg\");\n    setSvgWidth(\n      svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right\n    );\n    setSvgHeight(\n      svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom\n    );\n  }, []);\n  const unitLayoutPadding = {\n    top: svgWidth * 0.02,\n    left: 40,\n    right: 15,\n    bottom: 1,\n  };\n\n  const unitBlockPadding = {\n    top: 2,\n    left: 3,\n    right: 3,\n    bottom: 1,\n  };\n  const unitBlockWidth =\n    unitXAttrList.length > 0\n      ? svgWidth / unitXAttrList.length -\n        unitBlockPadding.left -\n        unitBlockPadding.right\n      : 0;\n  const unitBlockHeight =\n    unitYAttrList.length > 0\n      ? svgHeight / unitYAttrList.length -\n        unitBlockPadding.top -\n        unitBlockPadding.bottom\n      : 0;\n  // console.log(unitBlockWidth, unitBlockHeight);\n\n  const aspectRatio = Math.floor(\n    unitBlockWidth > 0 ? unitBlockHeight / unitBlockWidth : 1\n  );\n\n  const blockCountX = Math.ceil(\n    Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n  );\n  // console.log('blockCountX', blockCountX);\n\n  const xAttr2blockCountX = unitXAttrList.map((xAttr, i) => {\n    const maxColumnBlockCount = Math.max(\n      ...unitYAttrList.map((yAttr, j) => get(unitBlockCount, [xAttr, yAttr], 0))\n    );\n    let blockCountX = Math.ceil(\n      Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n    );\n    if (maxColumnBlockCount > maxUnitBlockPaperCount) {\n      blockCountX += 1;\n    }\n    return blockCountX;\n  });\n  // console.log(\"xAttr2blockCountX\", xAttr2blockCountX);\n\n  // const blockCountY = Math.ceil(aspectRatio * blockCountX);\n\n  let r = unitBlockWidth / blockCountX;\n  // console.log(\"r\", r);\n\n  const xAttr2blockCountX_StartCount = [0];\n  const xAttr2blockCountX_StartPos = [0];\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartCount.push(\n      xAttr2blockCountX_StartCount[i - 1] + xAttr2blockCountX[i - 1]\n    );\n  }\n\n  r =\n    (svgWidth -\n      (unitBlockPadding.left + unitBlockPadding.right) * unitXAttrList.length) /\n    (xAttr2blockCountX_StartCount[xAttr2blockCountX_StartCount.length - 1] +\n      xAttr2blockCountX[xAttr2blockCountX.length - 1]);\n  // console.log(\"new r\", r);\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartPos.push(\n      xAttr2blockCountX_StartCount[i] * r +\n        (unitBlockPadding.left + unitBlockPadding.right) * i\n    );\n  }\n  // console.log(\"xAttr2blockCountX_StartCount\", xAttr2blockCountX_StartCount);\n  // console.log(\"xAttr2blockCountX_StartPos\", xAttr2blockCountX_StartPos);\n  const scale = d3.scaleLinear().domain([0, 100]).range([0.25, 0.8]);\n  const citeCount2grey = (count) => d3.interpolateGreys(scale(count));\n  const paperCircles = papers.map((paper) => {\n    const paperCircle = {};\n    paperCircle.oriData = toJS(paper);\n\n    paperCircle.BlockIndexX = unitXAttrList.indexOf(paper[unitXAttr]);\n    paperCircle.BlockIndexY = unitYAttrList.indexOf(paper[unitYAttr]);\n\n    const doi = paper.DOI;\n    paperCircle.doi = doi;\n\n    paperCircle.circleIndexX =\n      doi2paperBlockPos[doi] % xAttr2blockCountX[paperCircle.BlockIndexX];\n    paperCircle.circleIndexY = Math.floor(\n      doi2paperBlockPos[doi] / xAttr2blockCountX[paperCircle.BlockIndexX]\n    );\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      paperCircle.BlockIndexX *\n        (unitBlockWidth + unitBlockPadding.left + unitBlockPadding.right) +\n      (paperCircle.circleIndexX + 0.5) * r;\n    paperCircle.cy =\n      unitLayoutPadding.top +\n      paperCircle.BlockIndexY *\n        (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) +\n      (paperCircle.circleIndexY + 0.5) * r;\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      xAttr2blockCountX_StartPos[paperCircle.BlockIndexX] +\n      (paperCircle.circleIndexX + 0.5) * r;\n\n    paperCircle.citationGrey = citeCount2grey(paper.CitationCount);\n    paperCircle.activeColors = get(doi2colors, doi, []);\n    paperCircle.colors =\n      paperCircle.activeColors.length > 0\n        ? paperCircle.activeColors\n        : [paperCircle.citationGrey];\n\n    paperCircle.opacity = controlIsActive\n      ? paperCircle.activeColors.length > 0\n        ? 0.8\n        : 0.4\n      : 0.8;\n\n    paperCircle.title = paper.Title;\n\n    return paperCircle;\n  });\n\n  const xLabels = unitXAttrList.map((xAttr, i) => {\n    const startX = unitLayoutPadding.left + xAttr2blockCountX_StartPos[i];\n    const middleX = startX + (xAttr2blockCountX[i] * r) / 2;\n    return {\n      value: xAttr,\n      x: middleX,\n      y: unitLayoutPadding.top * 0.8,\n    };\n  });\n\n  const yLabels = unitYAttrList.map((yAttr, i) => {\n    const startY =\n      unitLayoutPadding.top +\n      (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) * i;\n    return {\n      value: yAttr,\n      x: unitLayoutPadding.left * 0.35,\n      y: startY,\n    };\n  });\n\n  const handleClickPaper = (doi) => {\n    console.log(\"click\", doi);\n    setCurrentSelected(doi);\n  };\n\n  return (\n    <div className=\"unit-view\">\n      <svg id=\"unit-svg\" width=\"100%\" height=\"100%\">\n        <g id=\"units\">\n          {paperCircles.map((paper, i) => (\n            <CircleUnit\n              key={i}\n              cx={paper.cx}\n              cy={paper.cy}\n              r={r / 2.4}\n              // grey={paper.citationGrey}\n              // oriData={paper.oriData}\n              doi={paper.doi}\n              colors={paper.colors}\n              opacity={paper.opacity}\n              handleClick={handleClickPaper}\n              isSelect={currentSelected === paper.doi}\n              title={paper.title}\n            />\n          ))}\n        </g>\n        <g id=\"x-label\">\n          {xLabels.map((label) => (\n            <text\n              key={label.value}\n              x={label.x}\n              y={label.y}\n              textAnchor=\"middle\"\n              fontSize={r * 1.6}\n              fill=\"rgb(78, 78, 78)\"\n            >\n              {label.value}\n            </text>\n          ))}\n        </g>\n        <g id=\"y-label\">\n          {yLabels.map((label) => (\n            <text\n              key={label.value}\n              // x={label.x}\n              // y={label.y}\n              // textAnchor=\"start\"\n              transform={`translate(${label.x}, ${label.y}) rotate(90)`}\n              fontSize={r * 1.6}\n              fill=\"rgb(78, 78, 78)\"\n            >\n              {label.value}\n            </text>\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n});\n\nexport default UnitView;\n","import React, { useState, useRef } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { get } from \"lodash\";\nimport { Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Tag, Input, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\n\nconst DetailView = observer(() => {\n  const store = useGlobalStore();\n  const { currentSelectedPaper, setPaper } = store;\n  const paper = currentSelectedPaper;\n  console.log(\"currentSelectedPaper\", currentSelectedPaper);\n\n  const doi = get(paper, \"DOI\", \"\");\n\n  const editTags = [\n    {\n      title: \"Public Tags\",\n      value: \"publicTags\",\n      initTags: get(paper, \"publicTags\", []),\n    },\n    {\n      title: \"Private Tags\",\n      value: \"privateTags\",\n      initTags: get(paper, \"privateTags\", []),\n    },\n  ];\n  const handleChangeTags = (attr, value) => doi && setPaper(doi, attr, value);\n  const handleChangeRead = (value) => {\n    setPaper(doi, \"read\", value);\n  };\n  return (\n    <div className=\"detail-view\" key={doi}>\n      {paper && (\n        <>\n          <div className=\"detail-title\">{paper.Title}</div>\n          <div className=\"detail-authors\">\n            {get(paper, \"authors\", []).join(\"; \")} ({paper.Year})\n          </div>\n          <div className=\"detail-edit-tags\">\n            <div className=\"detail-edit-read\">\n              <div className=\"detail-edit-title\">Read</div>\n              <Switch\n                size=\"small\"\n                checkedChildren={<CheckOutlined />}\n                unCheckedChildren={<CloseOutlined />}\n                defaultChecked={get(paper, \"read\", false)}\n                onChange={handleChangeRead}\n              />\n            </div>\n            {editTags.map((editTag) => (\n              <DetailEditTags\n                key={editTag.value}\n                title={editTag.title}\n                initTags={editTag.initTags}\n                handleChangeTags={(value) =>\n                  handleChangeTags(editTag.value, value)\n                }\n              />\n            ))}\n          </div>\n          <div className=\"detail-attrs\">\n            <DetailItem paper={paper} label={\"AuthorKeywords\"} />\n            <DetailItem paper={paper} label={\"DOI\"} />\n            <DetailItem paper={paper} label={\"AuthorAffiliation\"} />\n            <DetailItem paper={paper} label={\"Abstract\"} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default DetailView;\n\nconst DetailItem = ({ paper, label }) => (\n  <div className=\"detail-attr\">\n    <div className=\"detail-key\">{label}:</div>\n    <div className=\"detail-content\">{get(paper, label, \"\")}</div>\n  </div>\n);\n\nconst DetailEditTags = ({ title, initTags, handleChangeTags }) => {\n  const [tags, _setTags] = useState(initTags);\n  const setTags = (newTags) => {\n    handleChangeTags(newTags);\n    _setTags(newTags);\n  };\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  const [editInput, setEditInput] = useState();\n  const saveEditInputRef = (input) => setEditInput(input);\n  const input = useRef();\n  // const saveInputRef = (input) => setInput(input);\n\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputConfirm = () => {\n    if (inputValue && tags.indexOf(inputValue) < 0) {\n      setTags([...tags, inputValue]);\n      setInputVisible(false);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleClose = (removeTag) => {\n    setTags(tags.filter((tag) => tag != removeTag));\n  };\n\n  const [inputVisible, setInputVisible] = useState(false);\n  const showInput = () => {\n    setInputVisible(true);\n    // input.focus();\n  };\n  return (\n    <div className=\"detail-edit-tag\">\n      <div className=\"detail-edit-title\">{title}:</div>\n      <div className=\"detail-edit-tags\">\n        <>\n          {tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  ref={saveEditInputRef}\n                  key={tag}\n                  size=\"small\"\n                  className=\"tag-input\"\n                  value={editInputValue}\n                  onchange={(e) => setEditInputValue(e.target.value)}\n                  onBlur={handleEditInputConfirm}\n                  onPressEnter={handleEditInputConfirm}\n                />\n              );\n            }\n\n            const tagElem = (\n              <Tag\n                className=\"edit-tag\"\n                key={tag}\n                closable={true}\n                onClose={() => handleClose(tag)}\n              >\n                <span\n                // onDoubleClick={(e) => {\n                //   setEditInputIndex(index);\n                //   setEditInputValue(tag);\n                //   editInput.focus();\n                //   e.preventDefault();\n                // }}\n                >\n                  {tag}\n                </span>\n              </Tag>\n            );\n            return tagElem;\n          })}\n          {inputVisible && (\n            <Input\n              ref={input}\n              type=\"text\"\n              size=\"small\"\n              className=\"tag-input\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onBlur={handleInputConfirm}\n              onPressEnter={handleInputConfirm}\n            />\n          )}\n          {!inputVisible && (\n            <Tag className=\"site-tag-plus\" onClick={showInput}>\n              <PlusOutlined /> New Tag\n            </Tag>\n          )}\n        </>\n      </div>\n    </div>\n  );\n};\n","export const userList = [\n  \"Prof. Yuan\",\n  \"Guozheng Li\",\n  \"Shuai Chen\",\n  \"Chenglei Yue\",\n  \"Ruike Jiang\",\n  \"Can Liu\",\n  \"Jincheng Li\",\n  \"Chaofan Yang\",\n  \"Hanning Shao\",\n  \"Yuchu Luo\",\n  \"Zhixian Lin\",\n  \"Min Tian\",\n  \"Dingyi Yang\",\n  \"Changhe Yang\",\n  \"Yanda Li\",\n  \"Datong Wei\",\n  \"Cong Wu\",\n  \"Hao Wu\",\n  \"Shaocong Tan\",\n  \"Jiacheng Yu\",\n  \"Sihang Li\",\n  \"Zhen Li\",\n  \"Haohua Liu\",\n];\n\nexport default userList;\n","import React from \"react\";\nimport \"./index.scss\";\nimport userList from \"../../Common/userList\";\nimport { useGlobalStore } from \"../../Store\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\n\n\nconst Header = () => {\n  const store = useGlobalStore();\n  const handleChange = (userId) => {\n    store.setUserId(userId);\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Paper Management System</div>\n      <div className=\"user-selector title\">\n        User: &nbsp;\n        <Select\n          // defaultValue=\"\"\n          size=\"small\"\n          onChange={handleChange}\n          style={{ width: 130 }}\n          placeholder=\"Set User\"\n        >\n          {userList.map((user) => (\n            <Option value={user} key={user}>\n              {user}\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./App.scss\";\nimport { StoreProvider, useGlobalStore } from \"./Store\";\n// import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport ControlView from \"./Views/ControlView\";\nimport UnitView from \"./Views/UnitView\";\nimport DetailView from \"./Views/DetailView\";\nimport Header from \"./Views/Header\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <ViewContainer />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n\n// init data\nconst ViewContainer = () => {\n  const store = useGlobalStore();\n  useEffect(() => {\n    const fetchPapers = async () => {\n      const papers = await d3.csv(\"data.csv\");\n      store.setPapers(papers);\n    };\n    fetchPapers();\n  }, [store]);\n  return (\n    <div className=\"view-container\">\n      <div className=\"header-container\">\n        <Header />\n      </div>\n      <div className=\"main-container\">\n        <div className=\"control-main-container\">\n          <div className=\"control-view-container\">\n            <ControlView />\n          </div>\n          <div className=\"unit-view-container\">\n            <UnitView />\n          </div>\n        </div>\n        <div className=\"detail-view-container\">\n          <DetailView />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}