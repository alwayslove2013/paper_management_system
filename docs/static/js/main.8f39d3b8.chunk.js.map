{"version":3,"sources":["Server/index.js","Common/Counter.js","Store/createStoreV0128.js","Store/index.js","Views/ControlView/index.js","Views/UnitView/CircleUnit.js","Views/UnitView/index.js","Views/DetailView/index.js","Common/userList.js","Views/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","fetchData","url","params","getUrl","includes","qs","stringify","Promise","resolve","reject","fetch","then","res","json","data","catch","err","getPublicTags","a","getPrivateTags","uid","setPrivateTags","pid","paper","privateTags","read","tags","filter","join","mostCommon","items","n","item2Count","forEach","itemList","item","itemCountList","push","count","sort","b","slice","map","attr2func","publicTags","createStore","papers","commonAuthors","commonCountries","commonPublicTags","commonPrivateTags","setPapers","compareAttr","console","log","doi2paper","colors","innerColors","outerColors","internalRefList","internalCitedList","refList","toLowerCase","split","trim","doi","authors","replace","countries","s","part","length","toUpperCase","ref","concat","computedPosition","initPublicTags","runInAction","setPaper","attr","value","this","find","p","userId","toJS","doiUpdateColors","unitXAttr","xAttrSet","Set","add","xAttrList","Array","from","unitYAttr","maxUnitBlockPaperCount","unitBlockCount","xAttr","yAttr","unitIndex","Math","max","Object","values","initPrivateTags","readIndex","indexOf","splice","batchUpdateColors","setUserId","localStorage","setItem","initUserId","getItem","label","list","highlightType","category2highlightType","controlTagNameList","category","activeTags","ans","key","outerCategories","isUnitOuterHighlight","outerCategory","tag2color","colorUse","setTagColor","tag","fullTag","i","_color","d3","updateColor","hightlightAttrs","maxCitationCount","currentSelected","currentSelectedRefSet","currentSelectedCitedSet","isSelected","setCurrentSelected","cancelSelect","storeContext","React","createContext","StoreProvider","children","store","useLocalObservable","Provider","useGlobalStore","useContext","Error","ControlView","observer","className","ControlItem","tagData","useState","setTags","handleClickOption","currentTags","index","clickOption","isSelect","ControlOption","style","background","border","value_format","onClick","CircleUnit","memo","cx","cy","r","opacity","handleClick","title","borderColor","borderOpacity","polarX","angle","sin","polarY","cos","innerStepAngle","PI","innerPoints","_","startX","startY","endX","endY","outerR","outerPolarX","outerPolarY","outerStepAngle","outerPoints","id","e","cursor","point","d","fill","stroke","strokeWidth","unitLayoutPadding","unitBlockPadding","UnitView","unitXAttrList","unitYAttrList","controlIsActive","svgWidth","setSvgWidth","svgHeight","setSvgHeight","useEffect","svg","document","querySelector","clientWidth","clientHeight","unitBlockWidth","unitBlockHeight","aspectRatio","floor","blockCountX","ceil","sqrt","xAttr2blockCountX","maxColumnBlockCount","j","get","xAttr2blockCountX_StartCount","xAttr2blockCountX_StartPos","scale","domain","range","paperCircles","paperCircle","oriData","BlockIndexX","BlockIndexY","circleIndexX","circleIndexY","citationGrey","citationCount","activeColors","has","Title","xLabels","x","y","yLabels","handleClickPaper","stopPropagation","width","height","textAnchor","fontSize","transform","DetailView","currentSelectedPaper","editTags","initTags","year","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","editTag","handleChangeTags","DetailItem","DetailEditTags","_setTags","newTags","editInputIndex","setEditInputIndex","input","useRef","editInputValue","setEditInputValue","handleEditInputConfirm","inputValue","setInputValue","handleInputConfirm","setInputVisible","inputVisible","onchange","target","onBlur","onPressEnter","closable","onClose","removeTag","type","PlusOutlined","userList","Option","Select","Header","placeholder","user","App","ViewContainer","fetchPapers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8f39d3b8.chunk.js","sourcesContent":["import qs from \"qs\";\n\nconst baseUrl = \"http://vis.pku.edu.cn/vis4vis/\";\nconst fetchData = (url, params = \"\") => {\n  const getUrl =\n    baseUrl + url + (url.includes(\"?\") ? \"&\" : \"?\") + qs.stringify(params);\n  return new Promise((resolve, reject) => {\n    fetch(getUrl)\n      .then((res) => res.json())\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n\nexport const getPublicTags = async () => {\n  return await fetchData(\"get_public_tags\");\n};\n\nexport const getPrivateTags = async ({ uid }) => {\n  return await fetchData(\"get_private_tags\", { uid });\n};\n\nexport const setPublicTags = ({ pid, paper }) => {\n  const tags = paper.publicTags;\n  fetchData(\"set_public_tags\", { pid, tags: tags.join(\",\") });\n  return \"OK\";\n};\n\nexport const setPrivateTags = ({ uid, pid, paper }) => {\n  const { privateTags, read } = paper;\n  uid &&\n    fetchData(\"set_private_tags\", {\n      uid,\n      pid,\n      tags: [...privateTags, read && \"read\"].filter((a) => a).join(\",\"),\n    });\n  return \"OK\";\n};\n","const mostCommon = (items, n = 10) => {\n  const item2Count = {};\n  items.forEach((itemList) => {\n    itemList.forEach((item) => {\n      if (item) {\n        if (item in item2Count) {\n          item2Count[item] += 1;\n        } else {\n          item2Count[item] = 1;\n        }\n      }\n    });\n  });\n  const itemCountList = [];\n  for (let item in item2Count) {\n    itemCountList.push({\n      item,\n      count: item2Count[item],\n    });\n  }\n  itemCountList.sort((a, b) => b.count - a.count);\n  return itemCountList.slice(0, n).map(a => a.item);\n};\n\nexport default mostCommon;\n","import * as d3 from \"d3\";\nimport { toJS, runInAction } from \"mobx\";\nimport {\n  setPublicTags,\n  setPrivateTags,\n  getPublicTags,\n  getPrivateTags,\n} from \"../Server\";\n// import { get } from \"lodash\";\nimport mostCommon from \"../Common/Counter\";\n\nconst debug = true;\n\nconst attr2func = {\n  publicTags: setPublicTags,\n  privateTags: setPrivateTags,\n  read: setPrivateTags,\n};\n\nconst createStore = () => {\n  return {\n    papers: [],\n    commonAuthors: [],\n    commonCountries: [],\n    commonPublicTags: [],\n    commonPrivateTags: [],\n    async setPapers(papers, compareAttr = \"citationCount\") {\n      debug && console.log(\"==> 初始化Papers\");\n      const doi2paper = {};\n      papers.forEach((paper) => {\n        // 初始化，一些特殊处理，比如如果没有doi或者引用量，就安排一个\n        // if (paper.doi === \"#\") paper.doi = `tmp-${i}`;\n        // if (paper.CitationCount === \"\") paper.CitationCount = 0;\n        // if (paper.Countries === \"#\" || paper.Countries === \"###\")\n        //   paper.Countries = \"\";\n        paper.privateTags = [];\n        paper.read = false;\n        paper.publicTags = [];\n        paper.colors = [];\n        paper.innerColors = [];\n        paper.outerColors = [];\n        paper.internalRefList = [];\n        paper.internalCitedList = [];\n        paper.refList = paper.refList\n          .toLowerCase()\n          .split(\";\")\n          .map((a) => a.trim());\n        doi2paper[paper.doi] = paper;\n\n        // 提取authors\n        paper.authors = paper.authors\n          .split(\";\")\n          .map((a) => a.trim().replace(/\\{(.*)\\}/, \"$1\"));\n\n        // 提取countries\n        paper.countries = paper.countries\n          .split(\";\")\n          .map((s) => {\n            const part = s\n              .trim()\n              .split(\" \")\n              .map((a) => a.trim())\n              .filter((a) => a);\n            if (part.length === 0) return \"\";\n            let country = part[part.length - 1]\n              .toLowerCase()\n              .replace(/^\\w/, (s) => s.toUpperCase());\n            return country;\n          })\n          .filter((a) => a);\n      });\n\n      papers.forEach((paper) => {\n        paper.refList.forEach((ref) => {\n          if (ref in doi2paper) {\n            const refPaper = doi2paper[ref];\n            refPaper.internalCitedList.push(paper.doi);\n            paper.internalRefList.push(ref);\n          }\n        });\n      });\n\n      this.commonAuthors = mostCommon(\n        papers.map((paper) => paper.authors),\n        7\n      ).concat([\"Xiaoru Yuan\"]);\n      // console.log(\n      //   \"Authors Tags: \",\n      //   mostCommon(\n      //     papers.map((paper) => paper.authors),\n      //     100\n      //   )\n      // );\n      this.commonCountries = mostCommon(papers.map((paper) => paper.countries));\n\n      // 先按引用量排序，再去统计分组的排序，这个时间消耗其实还挺大的。\n      papers.sort((a, b) => b[compareAttr] - a[compareAttr]);\n\n      // 开始计算位置\n      this.computedPosition(papers);\n      await this.initPublicTags(papers);\n\n      runInAction(() => {\n        this.papers = papers;\n      });\n    },\n    setPaper(doi, attr, value) {\n      const paper = this.papers.find((p) => p.doi === doi);\n      paper[attr] = value;\n      // if (attr === \"read\") {\n      //   if (value) {\n      //     paper.privateTags.push(\"read\");\n      //   } else {\n      //     paper.privateTags = [...paper.privateTags].filter(\n      //       (a) => a !== \"read\"\n      //     );\n      //   }\n      // }\n      debug && console.log(\"==> 更新paper数据 by doi:\", doi, attr, value);\n      // attr === \"publicTags\" && setPublicTags(doi, value);\n      attr2func[attr]({\n        uid: this.userId,\n        pid: doi,\n        paper: toJS(paper),\n      });\n      this.doiUpdateColors(doi);\n    },\n    unitXAttr: \"year\",\n    get unitXAttrList() {\n      const xAttrSet = new Set();\n      this.papers.forEach((paper) => {\n        xAttrSet.add(paper[this.unitXAttr]);\n      });\n      const xAttrList = Array.from(xAttrSet);\n      xAttrList.sort((a, b) => b - a);\n      return xAttrList;\n    },\n    unitYAttr: \"conferenceName\",\n    get unitYAttrList() {\n      return [\"SciVis\", \"InfoVis\", \"EuroVis\", \"VAST\", \"PacificVis\"];\n      // const yAttrSet = new Set();\n      // this.papers.forEach((paper) => {\n      //   yAttrSet.add(paper[this.unitYAttr]);\n      // });\n      // const yAttrList = Array.from(yAttrSet);\n      // yAttrList.sort();\n      // return yAttrList;\n    },\n    maxUnitBlockPaperCount: 0,\n    unitBlockCount: {},\n    computedPosition(papers) {\n      // 每一个block有多少单元\n      const unitBlockCount = {};\n      papers.forEach((paper) => {\n        const xAttr = paper[this.unitXAttr];\n        const yAttr = paper[this.unitYAttr];\n        if (!(xAttr in unitBlockCount)) unitBlockCount[xAttr] = {};\n        if (!(yAttr in unitBlockCount[xAttr])) unitBlockCount[xAttr][yAttr] = 0;\n        paper.unitIndex = unitBlockCount[xAttr][yAttr];\n        unitBlockCount[xAttr][yAttr] += 1;\n      });\n      this.maxUnitBlockPaperCount =\n        Math.max(...papers.map((paper) => paper.unitIndex)) * 0.6;\n      this.unitBlockCount = unitBlockCount;\n    },\n\n    async initPublicTags(papers) {\n      const publicTags = await getPublicTags();\n      papers.forEach((paper) => {\n        if (paper.doi in publicTags) {\n          paper.publicTags = publicTags[paper.doi].filter((a) => a);\n        }\n      });\n      runInAction(() => {\n        this.commonPublicTags = mostCommon(Object.values(publicTags));\n      });\n    },\n    async initPrivateTags() {\n      const privateTags = await getPrivateTags({ uid: this.userId });\n\n      runInAction(() => {\n        this.papers.forEach((paper) => {\n          if (paper.doi in privateTags) {\n            const readIndex = privateTags[paper.doi].indexOf(\"read\");\n            if (readIndex > -1) {\n              paper.read = true;\n              privateTags[paper.doi].splice(readIndex, 1);\n            }\n            paper.privateTags = privateTags[paper.doi].filter((a) => a);\n          }\n        });\n        this.commonPrivateTags = mostCommon(Object.values(privateTags));\n      });\n\n      this.batchUpdateColors();\n    },\n\n    userId: \"\",\n    setUserId(userId) {\n      if (userId !== this.userId) {\n        this.userId = userId;\n        debug && console.log(\"==> change userId:\", this.userId);\n        localStorage.setItem(\"paper-management-system-userId\", userId);\n        userId && this.initPrivateTags();\n      }\n    },\n    initUserId() {\n      const userId = localStorage.getItem(\"paper-management-system-userId\");\n      userId && this.setUserId(userId);\n    },\n\n    get controlTagNameList() {\n      return [\n        {\n          label: \"Country\",\n          value: \"countries\",\n          list: this.commonCountries.slice(0, 8).concat([\"Japan\", \"Korea\"]),\n          highlightType: \"outer\",\n        },\n        {\n          label: \"Author\",\n          value: \"authors\",\n          list: this.commonAuthors,\n          highlightType: \"inner\",\n        },\n        {\n          label: \"Private Tag\",\n          value: \"privateTags\",\n          // list: [\"read\"].concat(this.commonPrivateTags),\n          list: this.commonPrivateTags,\n          highlightType: \"inner\",\n        },\n        {\n          label: \"Public Tag\",\n          value: \"publicTags\",\n          list: this.commonPublicTags,\n          highlightType: \"inner\",\n        },\n      ];\n    },\n    get category2highlightType() {\n      const category2highlightType = {};\n      this.controlTagNameList.forEach((category) => {\n        category2highlightType[category.value] = category.highlightType;\n      });\n      return category2highlightType;\n    },\n    activeTags: {\n      countries: [],\n      authors: [],\n      privateTags: [],\n      publicTags: [],\n    },\n    // 判断 至少有一个控制器被激活\n    get controlIsActive() {\n      let ans = false;\n      for (let key in this.activeTags) {\n        if (this.activeTags[key].length > 0) {\n          ans = true;\n        }\n      }\n      return ans;\n    },\n    // 判断 至少有一个outer被激活\n    get isUnitOuterHighlight() {\n      const outerCategories = this.controlTagNameList\n        .filter((category) => category.highlightType === \"outer\")\n        .map((category) => category.value);\n      let isUnitOuterHighlight = false;\n      outerCategories.forEach((outerCategory) => {\n        if (this.activeTags[outerCategory].length > 0)\n          isUnitOuterHighlight = true;\n      });\n      return isUnitOuterHighlight;\n    },\n    tag2color: {},\n    colorUse: {},\n    setTagColor(tag, category) {\n      debug && console.log(\"==> 设置tag颜色:\", category, tag);\n      const fullTag = `${category}---${tag}`;\n      if (fullTag in this.tag2color) {\n        // 回收该颜色\n        this.colorUse[this.tag2color[fullTag]] = false;\n        delete this.tag2color[fullTag];\n        this.activeTags[category] = [...this.activeTags[category]].filter(\n          (a) => a !== tag\n        );\n      } else {\n        // 分配一个新的颜色\n        this.activeTags[category].push(tag);\n        let i = 0;\n        let _color = d3.schemeTableau10[i];\n        while (this.colorUse[_color]) {\n          i += 1;\n          if (i === 10) {\n            _color = \"black\";\n            break;\n          }\n          _color = d3.schemeTableau10[i];\n        }\n        this.tag2color[fullTag] = _color;\n        this.colorUse[_color] = true;\n      }\n      this.batchUpdateColors();\n    },\n    batchUpdateColors() {\n      this.papers.forEach((paper) => {\n        paper.colors = [];\n        paper.innerColors = [];\n        paper.outerColors = [];\n        this.updateColor(paper);\n      });\n    },\n    doiUpdateColors(doi) {\n      const paper = this.papers.find((p) => p.doi === doi);\n      paper.colors = [];\n      paper.innerColors = [];\n      paper.outerColors = [];\n      this.updateColor(paper);\n    },\n    updateColor(paper) {\n      const isReadTagActive = this.activeTags.privateTags.indexOf(\"read\") > -1;\n      if (isReadTagActive && paper.read) {\n        paper.colors.push(this.tag2color[\"privateTags---read\"]);\n        paper.innerColors.push(this.tag2color[\"privateTags---read\"]);\n      }\n\n      for (let category in this.activeTags) {\n        const hightlightAttrs = this.activeTags[category];\n        if (this.category2highlightType[category] === \"inner\") {\n          hightlightAttrs.forEach((attr) => {\n            if (paper[category].indexOf(attr) > -1) {\n              const fullTag = `${category}---${attr}`;\n              paper.innerColors.push(this.tag2color[fullTag]);\n            }\n          });\n        } else {\n          hightlightAttrs.forEach((attr) => {\n            if (paper[category].indexOf(attr) > -1) {\n              const fullTag = `${category}---${attr}`;\n              paper.outerColors.push(this.tag2color[fullTag]);\n            }\n          });\n        }\n        hightlightAttrs.forEach((attr) => {\n          if (paper[category].indexOf(attr) > -1) {\n            const fullTag = `${category}---${attr}`;\n            paper.colors.push(this.tag2color[fullTag]);\n          }\n        });\n      }\n    },\n    maxCitationCount: 200,\n\n    currentSelected: \"\",\n    currentSelectedRefSet: new Set(),\n    currentSelectedCitedSet: new Set(),\n    isSelected: false,\n    setCurrentSelected(doi) {\n      debug && console.log(\"==> 选中文章:\", doi);\n      this.currentSelected = doi;\n      this.isSelected = !!doi;\n\n      const paper = this.papers.find((paper) => paper.doi === doi);\n      this.currentSelectedRefSet = new Set(paper.internalRefList);\n      this.currentSelectedCitedSet = new Set(paper.internalCitedList);\n    },\n    cancelSelect() {\n      debug && console.log(\"==> 点击背景，取消论文选中状态\");\n      this.isSelected = false;\n    },\n    get currentSelectedPaper() {\n      return this.papers.find((paper) => paper.doi === this.currentSelected);\n    },\n  };\n};\n\nexport default createStore;\n","import React from \"react\";\nimport createStore from \"./createStoreV0128\";\nimport { useLocalObservable } from \"mobx-react-lite\";\n\nconst storeContext = React.createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  const store = useLocalObservable(createStore);\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const useGlobalStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    throw new Error(\"no Provider\");\n  }\n  return store;\n};\n","import React, { useState } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\n// import { toJS } from \"mobx\";\n\nconst ControlView = observer(() => {\n  const store = useGlobalStore();\n  const { controlTagNameList } = store;\n  return (\n    <div className=\"control-view\">\n      {controlTagNameList.map((tag) => (\n        <ControlItem key={tag.label} tagData={tag} />\n      ))}\n    </div>\n  );\n});\n\nexport default ControlView;\n\nconst ControlItem = observer(({ tagData }) => {\n  const store = useGlobalStore();\n  const { tag2color } = store;\n\n  const [tags, setTags] = useState([]);\n  const handleClickOption = (value) => {\n    const currentTags = [...tags];\n    const index = currentTags.indexOf(value);\n    if (index > -1) {\n      currentTags.splice(index, 1);\n      setTags(currentTags);\n    } else {\n      currentTags.push(value);\n      setTags(currentTags);\n    }\n    store.setTagColor(value, tagData.value);\n  };\n\n  return (\n    <div className=\"control-item\">\n      <div className=\"control-item-title\">{tagData.label}</div>\n      <div className=\"control-item-options\">\n        {tagData.list.map((item) => (\n          <ControlOption\n            key={item}\n            value={item}\n            clickOption={handleClickOption}\n            isSelect={\n              tags.indexOf(item) > -1 && tag2color[`${tagData.value}---${item}`]\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nconst ControlOption = ({ value, clickOption, isSelect }) => {\n  const className = [\"control-item-option\", isSelect && \"option-active\"]\n    .filter((a) => a)\n    .join(\" \");\n  const style = isSelect\n    ? { background: isSelect, border: `1px solid ${isSelect}` }\n    : {};\n  const value_format = value === \"Usa\" ? \"USA\" : value;\n  return (\n    <div className={className} onClick={() => clickOption(value)} style={style}>\n      {value_format}\n    </div>\n  );\n};\n","import React from \"react\";\n// import * as d3 from \"d3\";\n// import { useGlobalStore } from \"../../Store\";\n// import { observer } from \"mobx-react-lite\";\n\nconst CircleUnit = React.memo(\n  ({\n    cx,\n    cy,\n    r,\n    colors,\n    opacity,\n    doi,\n    handleClick,\n    borderColor,\n    borderOpacity,\n    title,\n    innerColors,\n    outerColors,\n  }) => {\n    const polarX = (angle) => cx + Math.sin(angle) * r;\n    const polarY = (angle) => cy + Math.cos(angle) * r;\n    const innerStepAngle = (2 * Math.PI) / innerColors.length;\n    const innerPoints = innerColors.map((_, i) => ({\n      startX: polarX(innerStepAngle * i),\n      startY: polarY(innerStepAngle * i),\n      endX: polarX(innerStepAngle * (i + 1)),\n      endY: polarY(innerStepAngle * (i + 1)),\n    }));\n\n    // console.log('outerColors', outerColors)\n    const outerR = r * 1.5;\n    const outerPolarX = (angle) => cx + Math.sin(angle) * outerR;\n    const outerPolarY = (angle) => cy + Math.cos(angle) * outerR;\n    const outerStepAngle = (2 * Math.PI) / outerColors.length;\n    const outerPoints = outerColors.map((_, i) => ({\n      startX: outerPolarX(outerStepAngle * i),\n      startY: outerPolarY(outerStepAngle * i),\n      endX: outerPolarX(outerStepAngle * (i + 1)),\n      endY: outerPolarY(outerStepAngle * (i + 1)),\n    }));\n\n\n    // const borderOpacity = isSelect ? 1 : 0;\n\n    return (\n      <g id=\"unit-g\" onClick={(e) => handleClick(e, doi)} cursor=\"pointer\">\n        <title>{title}</title>\n        <g id=\"unit-border-g\">\n          {/* <circle\n            cx={cx}\n            cy={cy}\n            r={1.4 * r}\n            fill=\"none\"\n            stroke={borderColor}\n            strokeWidth={0.6 * r}\n            opacity={borderOpacity}\n          /> */}\n          {outerPoints.length > 1 ? (\n            outerPoints.map((point, i) => (\n              <path\n                key={i}\n                d={`M ${cx} ${cy}\n              L ${point.startX} ${point.startY}\n              A ${outerR} ${outerR} 0 0 0 ${point.endX} ${point.endY}\n              Z\n              `}\n                // stroke=\"white\"\n                fill={outerColors[i]}\n                // strokeWidth={0.1 * r}\n                // fill-opacity=\"0.2\"\n              />\n            ))\n          ) : (\n            <circle\n              cx={cx}\n              cy={cy}\n              r={outerR}\n              fill={outerColors.length > 0 ? outerColors[0] : 'none'}\n              // stroke=\"red\"\n              // strokeWidth={0.15 * r}\n            />\n          )}\n          {/* {outerPoints.length > 0 && <circle\n            cx={cx}\n            cy={cy}\n            r={1.2 * r}\n            fill=\"white\"\n            // stroke={borderColor}\n            // strokeWidth={0.6 * r}\n            // opacity={borderOpacity}\n          />} */}\n          <circle\n            cx={cx}\n            cy={cy}\n            r={1.1 * r}\n            fill=\"white\"\n            // stroke={borderColor}\n            // strokeWidth={0.6 * r}\n            opacity={outerPoints.length > 0 ? 1 : 0}\n          />\n        </g>\n        <g id=\"unit-sector-g\" opacity={opacity}>\n          {innerPoints.length > 1 ? (\n            innerPoints.map((point, i) => (\n              <path\n                key={i}\n                d={`M ${cx} ${cy}\n              L ${point.startX} ${point.startY}\n              A ${r} ${r} 0 0 0 ${point.endX} ${point.endY}\n              Z\n              `}\n                stroke=\"white\"\n                fill={innerColors[i]}\n                strokeWidth={0.1 * r}\n                // fill-opacity=\"0.2\"\n              />\n            ))\n          ) : (\n            <circle\n              cx={cx}\n              cy={cy}\n              r={r}\n              fill={innerColors[0]}\n              // stroke=\"red\"\n              // strokeWidth={0.15 * r}\n            />\n          )}\n        </g>\n      </g>\n    );\n  }\n);\n\nexport default CircleUnit;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport CircleUnit from \"./CircleUnit\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\nimport { get } from \"lodash\";\nimport * as d3 from \"d3\";\n\nconst unitLayoutPadding = {\n  top: 30,\n  left: 40,\n  right: 15,\n  bottom: 1,\n};\n\nconst unitBlockPadding = {\n  top: 2,\n  left: 3,\n  right: 3,\n  bottom: 1,\n};\n\nconst UnitView = observer(() => {\n  const store = useGlobalStore();\n  const {\n    papers,\n    unitXAttr,\n    unitYAttr,\n    unitXAttrList,\n    unitYAttrList,\n    unitBlockCount,\n    maxUnitBlockPaperCount,\n    // doi2paperBlockPos,\n    // doi2privateTags,\n    // doi2publicTags,\n    // doi2comments,\n    // doi2colors,\n    controlIsActive,\n    isUnitOuterHighlight,\n    currentSelected,\n    setCurrentSelected,\n    isSelected,\n    cancelSelect,\n    currentSelectedRefSet,\n    currentSelectedCitedSet,\n  } = store;\n\n  // const svg = document.querySelector(\"#unit-svg\");\n  // const svgWidth =\n  //   svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right;\n  // const svgHeight =\n  //   svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom;\n\n  const [svgWidth, setSvgWidth] = useState(0);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n  // 初始化svg长宽\n  useEffect(() => {\n    const svg = document.querySelector(\"#unit-svg\");\n    setSvgWidth(\n      svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right\n    );\n    setSvgHeight(\n      svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom\n    );\n  }, []);\n  const unitBlockWidth =\n    unitXAttrList.length > 0\n      ? svgWidth / unitXAttrList.length -\n        unitBlockPadding.left -\n        unitBlockPadding.right\n      : 0;\n  const unitBlockHeight =\n    unitYAttrList.length > 0\n      ? svgHeight / unitYAttrList.length -\n        unitBlockPadding.top -\n        unitBlockPadding.bottom\n      : 0;\n  // console.log(unitBlockWidth, unitBlockHeight);\n\n  const aspectRatio = Math.floor(\n    unitBlockWidth > 0 ? unitBlockHeight / unitBlockWidth : 1\n  );\n\n  const blockCountX = Math.ceil(\n    Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n  );\n  // console.log('blockCountX', blockCountX);\n\n  const xAttr2blockCountX = unitXAttrList.map((xAttr, i) => {\n    const maxColumnBlockCount = Math.max(\n      ...unitYAttrList.map((yAttr, j) => get(unitBlockCount, [xAttr, yAttr], 0))\n    );\n    let blockCountX = Math.ceil(\n      Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n    );\n    if (maxColumnBlockCount > maxUnitBlockPaperCount) {\n      blockCountX += 1;\n    }\n    return blockCountX;\n  });\n  // console.log(\"xAttr2blockCountX\", xAttr2blockCountX);\n\n  // const blockCountY = Math.ceil(aspectRatio * blockCountX);\n\n  let r = unitBlockWidth / blockCountX;\n  // console.log(\"r\", r);\n\n  const xAttr2blockCountX_StartCount = [0];\n  const xAttr2blockCountX_StartPos = [0];\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartCount.push(\n      xAttr2blockCountX_StartCount[i - 1] + xAttr2blockCountX[i - 1]\n    );\n  }\n\n  r =\n    (svgWidth -\n      (unitBlockPadding.left + unitBlockPadding.right) * unitXAttrList.length) /\n    (xAttr2blockCountX_StartCount[xAttr2blockCountX_StartCount.length - 1] +\n      xAttr2blockCountX[xAttr2blockCountX.length - 1]);\n  // console.log(\"new r\", r);\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartPos.push(\n      xAttr2blockCountX_StartCount[i] * r +\n        (unitBlockPadding.left + unitBlockPadding.right) * i\n    );\n  }\n  // console.log(\"xAttr2blockCountX_StartCount\", xAttr2blockCountX_StartCount);\n  // console.log(\"xAttr2blockCountX_StartPos\", xAttr2blockCountX_StartPos);\n  const scale = d3.scaleLinear().domain([0, 100]).range([0.25, 0.8]);\n  const citeCount2grey = (count) => d3.interpolateGreys(scale(count));\n  const paperCircles = papers.map((paper) => {\n    const paperCircle = {};\n    paperCircle.oriData = toJS(paper);\n\n    paperCircle.BlockIndexX = unitXAttrList.indexOf(paper[unitXAttr]);\n    paperCircle.BlockIndexY = unitYAttrList.indexOf(paper[unitYAttr]);\n\n    const doi = paper.doi;\n    paperCircle.doi = doi;\n\n    paperCircle.circleIndexX =\n      paper.unitIndex % xAttr2blockCountX[paperCircle.BlockIndexX];\n    paperCircle.circleIndexY = Math.floor(\n      paper.unitIndex / xAttr2blockCountX[paperCircle.BlockIndexX]\n    );\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      paperCircle.BlockIndexX *\n        (unitBlockWidth + unitBlockPadding.left + unitBlockPadding.right) +\n      (paperCircle.circleIndexX + 0.5) * r;\n    paperCircle.cy =\n      unitLayoutPadding.top +\n      paperCircle.BlockIndexY *\n        (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) +\n      (paperCircle.circleIndexY + 0.5) * r;\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      xAttr2blockCountX_StartPos[paperCircle.BlockIndexX] +\n      (paperCircle.circleIndexX + 0.5) * r;\n\n    paperCircle.citationGrey = citeCount2grey(paper.citationCount);\n    paperCircle.activeColors = paper.innerColors;\n    paperCircle.colors =\n      paperCircle.activeColors.length > 0\n        ? paperCircle.activeColors\n        : [paperCircle.citationGrey];\n    paperCircle.innerColors =\n      paperCircle.activeColors.length > 0\n        ? paperCircle.activeColors\n        : [paperCircle.citationGrey];\n    // paperCircle.outerColors\n    paperCircle.outerColors = [\"none\"];\n    if (isUnitOuterHighlight) {\n      paperCircle.outerColors = paper.outerColors;\n    } else {\n      if (isSelected) {\n        if (currentSelected === paper.doi)\n          paperCircle.outerColors = [\"#d95f02\"];\n        if (currentSelectedRefSet.has(paper.doi))\n          paperCircle.outerColors = [\"#1b9e77\"];\n        if (currentSelectedCitedSet.has(paper.doi))\n          paperCircle.outerColors = [\"#7570b3\"];\n      } else {\n        paperCircle.outerColors = [\"none\"];\n      }\n    }\n\n    paperCircle.opacity = controlIsActive\n      ? paperCircle.activeColors.length > 0\n        ? 0.8\n        : 0.4\n      : 0.8;\n\n    paperCircle.title = paper.Title;\n\n    if (isSelected) {\n      if (currentSelected === paper.doi) paperCircle.borderColor = \"#d95f02\";\n      if (currentSelectedRefSet.has(paper.doi))\n        paperCircle.borderColor = \"#1b9e77\";\n      if (currentSelectedCitedSet.has(paper.doi))\n        paperCircle.borderColor = \"#7570b3\";\n    } else {\n      paperCircle.borderColor = \"none\";\n    }\n\n    return paperCircle;\n  });\n\n  const xLabels = unitXAttrList.map((xAttr, i) => {\n    const startX = unitLayoutPadding.left + xAttr2blockCountX_StartPos[i];\n    const middleX = startX + (xAttr2blockCountX[i] * r) / 2;\n    return {\n      value: xAttr,\n      x: middleX,\n      y: unitLayoutPadding.top * 0.8,\n    };\n  });\n\n  const yLabels = unitYAttrList.map((yAttr, i) => {\n    const startY =\n      unitLayoutPadding.top +\n      (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) * i;\n    return {\n      value: yAttr,\n      x: unitLayoutPadding.left * 0.35,\n      y: startY,\n    };\n  });\n\n  const handleClickPaper = (e, doi) => {\n    // console.log(\"click\", e, doi);\n    e.stopPropagation();\n    setCurrentSelected(doi);\n  };\n\n  const handleClickBackground = () => {\n    cancelSelect();\n  };\n\n  return (\n    <div className=\"unit-view\">\n      <svg\n        id=\"unit-svg\"\n        width=\"100%\"\n        height=\"100%\"\n        onClick={handleClickBackground}\n      >\n        <g id=\"units\">\n          {r > 0 &&\n            paperCircles.map((paper, i) => (\n              <CircleUnit\n                key={i}\n                cx={paper.cx}\n                cy={paper.cy}\n                r={r / 2.4}\n                // grey={paper.citationGrey}\n                // oriData={paper.oriData}\n                doi={paper.doi}\n                colors={paper.colors}\n                opacity={paper.opacity}\n                innerColors={paper.innerColors}\n                outerColors={paper.outerColors}\n                handleClick={handleClickPaper}\n                // isSelect={isSelected && currentSelected === paper.doi}\n                borderOpacity={paper.borderOpacity}\n                borderColor={paper.borderColor}\n                title={paper.title}\n              />\n            ))}\n        </g>\n        <g id=\"x-label\">\n          {r > 0 &&\n            xLabels.map((label) => (\n              <text\n                key={label.value}\n                x={label.x}\n                y={label.y}\n                textAnchor=\"middle\"\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n        <g id=\"y-label\">\n          {r > 0 &&\n            yLabels.map((label) => (\n              <text\n                key={label.value}\n                // x={label.x}\n                // y={label.y}\n                // textAnchor=\"start\"\n                transform={`translate(${label.x}, ${label.y}) rotate(90)`}\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n      </svg>\n    </div>\n  );\n});\n\nexport default UnitView;\n","import React, { useState, useRef } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { get } from \"lodash\";\nimport { Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Tag, Input } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { toJS } from \"mobx\";\n\nconst debug = true;\n\nconst DetailView = observer(() => {\n  const store = useGlobalStore();\n  const { currentSelectedPaper, setPaper } = store;\n  const paper = currentSelectedPaper;\n  debug && console.log(\"currentSelectedPaper\", toJS(currentSelectedPaper));\n  if (!currentSelectedPaper) {\n    return <div></div>;\n  }\n\n  const doi = get(paper, \"doi\", \"\");\n\n  const editTags = [\n    {\n      title: \"Private Tags\",\n      value: \"privateTags\",\n      initTags: get(paper, \"privateTags\", []),\n    },\n    {\n      title: \"Public Tags\",\n      value: \"publicTags\",\n      initTags: get(paper, \"publicTags\", []),\n    },\n  ];\n  const handleChangeTags = (attr, value) => {\n    doi && setPaper(doi, attr, value);\n  };\n  const handleChangeRead = (value) => {\n    setPaper(doi, \"read\", value);\n  };\n  return (\n    <div className=\"detail-view\" key={doi}>\n      {paper && (\n        <>\n          <div className=\"detail-title\">{paper.title}</div>\n          <div className=\"detail-authors\">\n            {get(paper, \"authors\", []).join(\"; \")} ({paper.year})\n          </div>\n          <div className=\"detail-edit-tags\">\n            <div className=\"detail-edit-read\">\n              <div className=\"detail-edit-title\">Read</div>\n              <Switch\n                size=\"small\"\n                checkedChildren={<CheckOutlined />}\n                unCheckedChildren={<CloseOutlined />}\n                defaultChecked={get(paper, \"read\", false)}\n                onChange={handleChangeRead}\n              />\n            </div>\n            {editTags.map((editTag) => (\n              <DetailEditTags\n                key={editTag.value}\n                title={editTag.title}\n                initTags={editTag.initTags}\n                handleChangeTags={(value) =>\n                  handleChangeTags(editTag.value, value)\n                }\n              />\n            ))}\n          </div>\n          <div className=\"detail-attrs\">\n            <DetailItem paper={paper} label={\"keywords\"} />\n            <DetailItem paper={paper} label={\"doi\"} />\n            <DetailItem paper={paper} label={\"affiliation\"} />\n            <DetailItem paper={paper} label={\"abstract\"} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default DetailView;\n\nconst DetailItem = ({ paper, label }) => (\n  <div className=\"detail-attr\">\n    <div className=\"detail-key\">{label}:</div>\n    <div className=\"detail-content\">{get(paper, label, \"\")}</div>\n  </div>\n);\n\nconst DetailEditTags = ({ title, initTags, handleChangeTags }) => {\n  const [tags, _setTags] = useState(initTags);\n  const setTags = (newTags) => {\n    handleChangeTags(newTags);\n    _setTags(newTags);\n  };\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  // const [editInput, setEditInput] = useState();\n  // const saveEditInputRef = (input) => setEditInput(input);\n  const input = useRef();\n  // const saveInputRef = (input) => setInput(input);\n\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputConfirm = () => {\n    if (inputValue && tags.indexOf(inputValue) < 0) {\n      setTags([...tags, inputValue]);\n      setInputVisible(false);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleClose = (removeTag) => {\n    setTags(tags.filter((tag) => tag !== removeTag));\n  };\n\n  const [inputVisible, setInputVisible] = useState(false);\n  const showInput = () => {\n    setInputVisible(true);\n    // input.focus();\n  };\n  return (\n    <div className=\"detail-edit-tag\">\n      <div className=\"detail-edit-title\">{title}:</div>\n      <div className=\"detail-edit-tags\">\n        <>\n          {tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  // ref={saveEditInputRef}\n                  key={tag}\n                  size=\"small\"\n                  className=\"tag-input\"\n                  value={editInputValue}\n                  onchange={(e) => setEditInputValue(e.target.value)}\n                  onBlur={handleEditInputConfirm}\n                  onPressEnter={handleEditInputConfirm}\n                />\n              );\n            }\n\n            const tagElem = (\n              <Tag\n                className=\"edit-tag\"\n                key={tag}\n                closable={true}\n                onClose={() => handleClose(tag)}\n              >\n                <span\n                // onDoubleClick={(e) => {\n                //   setEditInputIndex(index);\n                //   setEditInputValue(tag);\n                //   editInput.focus();\n                //   e.preventDefault();\n                // }}\n                >\n                  {tag}\n                </span>\n              </Tag>\n            );\n            return tagElem;\n          })}\n          {inputVisible && (\n            <Input\n              ref={input}\n              type=\"text\"\n              size=\"small\"\n              className=\"tag-input\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onBlur={handleInputConfirm}\n              onPressEnter={handleInputConfirm}\n            />\n          )}\n          {!inputVisible && (\n            <Tag className=\"site-tag-plus\" onClick={showInput}>\n              <PlusOutlined /> New Tag\n            </Tag>\n          )}\n        </>\n      </div>\n    </div>\n  );\n};\n","export const userList = [\n  \"Prof. Yuan\",\n  \"Guozheng Li\",\n  \"Shuai Chen\",\n  \"Chenglei Yue\",\n  \"Ruike Jiang\",\n  \"Can Liu\",\n  \"Jincheng Li\",\n  \"Chaofan Yang\",\n  \"Hanning Shao\",\n  \"Yuchu Luo\",\n  \"Zhixian Lin\",\n  \"Min Tian\",\n  \"Dingyi Yang\",\n  \"Changhe Yang\",\n  \"Yanda Li\",\n  \"Datong Wei\",\n  \"Cong Wu\",\n  \"Hao Wu\",\n  \"Shaocong Tan\",\n  \"Jiacheng Yu\",\n  \"Sihang Li\",\n  \"Zhen Li\",\n  \"Haohua Liu\",\n  \"KaiChen Nie\"\n];\n\nexport default userList;\n","import React from \"react\";\nimport \"./index.scss\";\nimport userList from \"../../Common/userList\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\n\nconst Header = observer(() => {\n  const store = useGlobalStore();\n  const handleChange = (userId) => {\n    store.setUserId(userId);\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Paper Management System</div>\n      <div className=\"user-selector title\">\n        User: &nbsp;\n        <Select\n          value={store.userId}\n          size=\"small\"\n          onChange={handleChange}\n          style={{ width: 130 }}\n          placeholder=\"Set User\"\n        >\n          {userList.map((user) => (\n            <Option value={user} key={user}>\n              {user}\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n});\n\nexport default Header;\n","import \"./App.scss\";\nimport { StoreProvider, useGlobalStore } from \"./Store\";\n// import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport ControlView from \"./Views/ControlView\";\nimport UnitView from \"./Views/UnitView\";\nimport DetailView from \"./Views/DetailView\";\nimport Header from \"./Views/Header\";\nimport SearchView from \"./Views/SearchView\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <ViewContainer />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n\n// init data\nconst ViewContainer = () => {\n  const store = useGlobalStore();\n  useEffect(() => {\n    const fetchPapers = async () => {\n      const papers = await d3.csv(\"all_papers_data_0302.csv\");\n      await store.setPapers(papers);\n      store.initUserId();\n    };\n    fetchPapers();\n  }, [store]);\n  return (\n    <div className=\"view-container\">\n      <div className=\"header-container\">\n        <Header />\n      </div>\n      <div className=\"main-container\">\n        <div className=\"control-main-container\">\n          <div className=\"control-view-container\">\n            <ControlView />\n          </div>\n          {/* <div className=\"info-view-container\">\n            <div className=\"search-view-container\">\n              <SearchView searchAttr={'title'} />\n            </div>\n          </div> */}\n          <div className=\"unit-view-container\">\n            <UnitView />\n          </div>\n        </div>\n        <div className=\"detail-view-container\">\n          <DetailView />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}