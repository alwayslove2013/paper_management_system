{"version":3,"sources":["Server/index.js","Common/Counter.js","Store/createStoreV0128.js","Store/index.js","Views/ControlView/index.js","Views/UnitView/CircleUnit.js","Views/UnitView/index.js","Views/DetailView/index.js","Common/userList.js","Views/Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","fetchData","url","params","getUrl","includes","qs","stringify","Promise","resolve","reject","fetch","then","res","json","data","catch","err","getPublicTags","a","getPrivateTags","uid","setPrivateTags","pid","paper","privateTags","read","tags","filter","join","mostCommon","items","n","item2Count","forEach","itemList","item","itemCountList","push","count","sort","b","slice","map","attr2func","publicTags","createStore","papers","commonAuthors","commonCountries","commonPublicTags","commonPrivateTags","setPapers","compareAttr","console","log","i","DOI","CitationCount","Countries","colors","authors","AuthorNames","split","trim","countries","s","part","length","computedPosition","initPublicTags","setPaper","doi","attr","value","this","find","p","userId","toJS","doiUpdateColors","unitXAttr","xAttrSet","Set","add","xAttrList","Array","from","unitYAttr","maxUnitBlockPaperCount","unitBlockCount","xAttr","yAttr","unitIndex","Math","max","Object","values","initPrivateTags","setUserId","label","list","concat","activeTags","ans","key","tag2color","colorUse","setTagColor","tag","category","_color","d3","batchUpdateColors","indexOf","maxCitationCount","currentSelected","setCurrentSelected","storeContext","React","createContext","StoreProvider","children","store","useLocalObservable","Provider","useGlobalStore","useContext","Error","ControlView","observer","controlTagNameList","className","ControlItem","tagData","useState","setTags","handleClickOption","currentTags","index","splice","clickOption","isSelect","ControlOption","style","background","border","onClick","CircleUnit","memo","cx","cy","r","opacity","handleClick","title","stepAngle","PI","polarX","angle","sin","polarY","cos","points","_","startX","startY","endX","endY","borderOpacity","id","cursor","fill","stroke","strokeWidth","point","d","unitLayoutPadding","unitBlockPadding","UnitView","unitXAttrList","unitYAttrList","controlIsActive","doi2paperBlockPos","svgWidth","setSvgWidth","svgHeight","setSvgHeight","useEffect","svg","document","querySelector","clientWidth","clientHeight","unitBlockWidth","unitBlockHeight","aspectRatio","floor","blockCountX","ceil","sqrt","xAttr2blockCountX","maxColumnBlockCount","j","get","xAttr2blockCountX_StartCount","xAttr2blockCountX_StartPos","scale","domain","range","paperCircles","paperCircle","oriData","BlockIndexX","BlockIndexY","circleIndexX","circleIndexY","citationGrey","activeColors","Title","xLabels","x","y","yLabels","handleClickPaper","width","height","textAnchor","fontSize","transform","DetailView","currentSelectedPaper","editTags","initTags","Year","size","checkedChildren","CheckOutlined","unCheckedChildren","CloseOutlined","defaultChecked","onChange","editTag","handleChangeTags","DetailItem","DetailEditTags","_setTags","newTags","editInputIndex","setEditInputIndex","input","useRef","editInputValue","setEditInputValue","handleEditInputConfirm","inputValue","setInputValue","handleInputConfirm","setInputVisible","inputVisible","onchange","e","target","onBlur","onPressEnter","closable","onClose","removeTag","ref","type","PlusOutlined","userList","Option","Select","Header","placeholder","user","App","ViewContainer","fetchPapers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a5379571.chunk.js","sourcesContent":["import qs from \"qs\";\n\nconst baseUrl = \"http://vis.pku.edu.cn/vis4vis/\";\nconst fetchData = (url, params = \"\") => {\n  const getUrl =\n    baseUrl + url + (url.includes(\"?\") ? \"&\" : \"?\") + qs.stringify(params);\n  return new Promise((resolve, reject) => {\n    fetch(getUrl)\n      .then((res) => res.json())\n      .then((data) => resolve(data))\n      .catch((err) => reject(err));\n  });\n};\n\nexport const getPublicTags = async () => {\n  return await fetchData(\"get_public_tags\");\n};\n\nexport const getPrivateTags = async ({ uid }) => {\n  return await fetchData(\"get_public_tags\", { uid });\n};\n\nexport const setPublicTags = ({ pid, paper }) => {\n  const tags = paper.publicTags;\n  fetchData(\"set_public_tags\", { pid, tags: tags.join(\",\") });\n  return \"OK\";\n};\n\nexport const setPrivateTags = ({ uid, pid, paper }) => {\n  const { privateTags, read } = paper;\n  uid &&\n    fetchData(\"set_private_tags\", {\n      uid,\n      pid,\n      tags: [...privateTags, read && \"read\"].filter((a) => a).join(\",\"),\n    });\n  return \"OK\";\n};\n","const mostCommon = (items, n = 10) => {\n  const item2Count = {};\n  items.forEach((itemList) => {\n    itemList.forEach((item) => {\n      if (item) {\n        if (item in item2Count) {\n          item2Count[item] += 1;\n        } else {\n          item2Count[item] = 1;\n        }\n      }\n    });\n  });\n  const itemCountList = [];\n  for (let item in item2Count) {\n    itemCountList.push({\n      item,\n      count: item2Count[item],\n    });\n  }\n  itemCountList.sort((a, b) => b.count - a.count);\n  return itemCountList.slice(0, n).map(a => a.item);\n};\n\nexport default mostCommon;\n","import * as d3 from \"d3\";\nimport { toJS } from \"mobx\";\nimport {\n  setPublicTags,\n  setPrivateTags,\n  getPublicTags,\n  getPrivateTags,\n} from \"../Server\";\n// import { get } from \"lodash\";\nimport mostCommon from \"../Common/Counter\";\n\nconst debug = true;\n\nconst attr2func = {\n  publicTags: setPublicTags,\n  privateTags: setPrivateTags,\n  read: setPrivateTags,\n};\n\nconst createStore = () => {\n  return {\n    papers: [],\n    commonAuthors: [],\n    commonCountries: [],\n    commonPublicTags: [],\n    commonPrivateTags: [],\n    async setPapers(papers, compareAttr = \"CitationCount\") {\n      debug && console.log(\"==> init Papers\");\n      papers.forEach((paper, i) => {\n        // 初始化，一些特殊处理，比如如果没有doi或者引用量，就安排一个\n        if (paper.DOI === \"#\") paper.DOI = `tmp-${i}`;\n        if (paper.CitationCount === \"\") paper.CitationCount = 0;\n        if (paper.Countries === \"#\" || paper.Countries === \"###\")\n          paper.Countries = \"\";\n        paper.privateTags = [];\n        paper.publicTags = [];\n        paper.colors = [];\n\n        // 提取authors\n        paper.authors = paper.AuthorNames.split(\";\").map((a) => a.trim());\n\n        // 提取countries\n        paper.countries = paper.Countries.split(\";\")\n          .map((s) => {\n            const part = s.trim().split(\" \");\n            return part.length === 0 ? \"\" : part[part.length - 1].trim();\n          })\n          .filter((a) => a);\n      });\n\n      this.commonAuthors = mostCommon(papers.map((paper) => paper.authors));\n      this.commonCountries = mostCommon(papers.map((paper) => paper.countries));\n\n      // 先按引用量排序，再去统计分组的排序，这个时间消耗其实还挺大的。\n      papers.sort((a, b) => b[compareAttr] - a[compareAttr]);\n\n      // 开始计算位置\n      this.computedPosition(papers);\n      await this.initPublicTags(papers);\n\n      this.papers = papers;\n    },\n    setPaper(doi, attr, value) {\n      const paper = this.papers.find((p) => p.DOI === doi);\n      paper[attr] = value;\n      debug && console.log(\"==> update paper\", doi, attr, value);\n      // attr === \"publicTags\" && setPublicTags(doi, value);\n      attr2func[attr]({\n        uid: this.userId,\n        pid: doi,\n        paper: toJS(paper),\n      });\n      this.doiUpdateColors(doi);\n    },\n    unitXAttr: \"Year\",\n    get unitXAttrList() {\n      const xAttrSet = new Set();\n      this.papers.forEach((paper) => {\n        xAttrSet.add(paper[this.unitXAttr]);\n      });\n      const xAttrList = Array.from(xAttrSet);\n      xAttrList.sort((a, b) => b - a);\n      return xAttrList;\n    },\n    unitYAttr: \"Conference\",\n    get unitYAttrList() {\n      return [\"SciVis\", \"InfoVis\", \"VAST\", \"PacificVis\"];\n      // const yAttrSet = new Set();\n      // this.papers.forEach((paper) => {\n      //   yAttrSet.add(paper[this.unitYAttr]);\n      // });\n      // const yAttrList = Array.from(yAttrSet);\n      // yAttrList.sort();\n      // return yAttrList;\n    },\n    maxUnitBlockPaperCount: 0,\n    unitBlockCount: {},\n    computedPosition(papers) {\n      // 每一个block有多少单元\n      const unitBlockCount = {};\n      papers.forEach((paper) => {\n        const xAttr = paper[this.unitXAttr];\n        const yAttr = paper[this.unitYAttr];\n        if (!(xAttr in unitBlockCount)) unitBlockCount[xAttr] = {};\n        if (!(yAttr in unitBlockCount[xAttr])) unitBlockCount[xAttr][yAttr] = 0;\n        paper.unitIndex = unitBlockCount[xAttr][yAttr];\n        unitBlockCount[xAttr][yAttr] += 1;\n      });\n      this.maxUnitBlockPaperCount =\n        Math.max(...papers.map((paper) => paper.unitIndex)) * 0.6;\n      this.unitBlockCount = unitBlockCount;\n    },\n\n    async initPublicTags(papers) {\n      const publicTags = await getPublicTags();\n      papers.forEach((paper) => {\n        if (paper.DOI in publicTags) {\n          paper.publicTags = publicTags[paper.DOI].filter((a) => a);\n        }\n      });\n      this.commonPublicTags = mostCommon(Object.values(publicTags));\n    },\n    async initPrivateTags() {\n      const privateTags = await getPrivateTags({ uid: this.userId });\n      this.papers.forEach((paper) => {\n        if (paper.DOI in privateTags) {\n          paper.privateTags = privateTags[paper.DOI].filter((a) => a);\n        }\n      });\n      this.commonPrivateTags = mostCommon(Object.values(privateTags));\n    },\n\n    userId: \"\",\n    setUserId(userId) {\n      this.userId = userId;\n      debug && console.log(\"change userId\", this.userId);\n      userId && this.initPrivateTags();\n    },\n\n    get controlTagNameList() {\n      return [\n        {\n          label: \"Country\",\n          value: \"countries\",\n          list: this.commonCountries.slice(0, 8).concat([\"Japan\", \"Korea\"]),\n        },\n        {\n          label: \"Author\",\n          value: \"authors\",\n          list: this.commonAuthors,\n        },\n        {\n          label: \"Private Tag\",\n          value: \"privateTags\",\n          list: this.commonPrivateTags,\n        },\n        {\n          label: \"Public Tag\",\n          value: \"publicTags\",\n          list: this.commonPublicTags,\n        },\n      ];\n    },\n    activeTags: {\n      countries: [],\n      authors: [],\n      privateTags: [],\n      publicTags: [],\n    },\n    // 判断 至少有一个控制器被激活\n    get controlIsActive() {\n      let ans = false;\n      for (let key in this.activeTags) {\n        if (this.activeTags[key].length > 0) {\n          ans = true;\n        }\n      }\n      return ans;\n    },\n    tag2color: {},\n    colorUse: {},\n    setTagColor(tag, category) {\n      debug && console.log(\"==> setTagColor\", tag, category);\n      if (tag in this.tag2color) {\n        // 回收该颜色\n        this.colorUse[this.tag2color[tag]] = false;\n        delete this.tag2color[tag];\n        this.activeTags[category] = [...this.activeTags[category]].filter(\n          (a) => a !== tag\n        );\n      } else {\n        // 分配一个新的颜色\n        this.activeTags[category].push(tag);\n        let i = 0;\n        let _color = d3.schemeTableau10[i];\n        while (this.colorUse[_color]) {\n          i += 1;\n          if (i === 10) {\n            _color = \"black\";\n            break;\n          }\n          _color = d3.schemeTableau10[i];\n        }\n        this.tag2color[tag] = _color;\n        this.colorUse[_color] = true;\n      }\n      this.batchUpdateColors();\n    },\n    batchUpdateColors() {\n      this.papers.forEach((paper) => {\n        paper.colors = [];\n        for (let category in this.activeTags) {\n          const hightlightAttrs = this.activeTags[category];\n          hightlightAttrs.forEach((attr) => {\n            if (paper[category].indexOf(attr) > -1) {\n              paper.colors.push(this.tag2color[attr]);\n            }\n          });\n        }\n      });\n    },\n    doiUpdateColors(doi) {\n      const paper = this.papers.find((p) => (p.DOI === doi));\n      paper.colors = [];\n      for (let category in this.activeTags) {\n        const hightlightAttrs = this.activeTags[category];\n        hightlightAttrs.forEach((attr) => {\n          if (paper[category].indexOf(attr) > -1) {\n            paper.colors.push(this.tag2color[attr]);\n          }\n        });\n      }\n    },\n    maxCitationCount: 200,\n\n    currentSelected: \"\",\n    setCurrentSelected(doi) {\n      debug && console.log(\"==> setCurrentSelected\", doi);\n      this.currentSelected = doi;\n    },\n    get currentSelectedPaper() {\n      return this.papers.find((paper) => paper.DOI === this.currentSelected);\n    },\n  };\n};\n\nexport default createStore;\n","import React from \"react\";\nimport createStore from \"./createStoreV0128\";\nimport { useLocalObservable } from \"mobx-react-lite\";\n\nconst storeContext = React.createContext(null);\n\nexport const StoreProvider = ({ children }) => {\n  const store = useLocalObservable(createStore);\n  return (\n    <storeContext.Provider value={store}>{children}</storeContext.Provider>\n  );\n};\n\nexport const useGlobalStore = () => {\n  const store = React.useContext(storeContext);\n  if (!store) {\n    throw new Error(\"no Provider\");\n  }\n  return store;\n};\n","import React, { useState } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\n// import { toJS } from \"mobx\";\n\nconst ControlView = observer(() => {\n  const store = useGlobalStore();\n  const { controlTagNameList } = store;\n  return (\n    <div className=\"control-view\">\n      {controlTagNameList.map((tag) => (\n        <ControlItem key={tag.label} tagData={tag} />\n      ))}\n    </div>\n  );\n});\n\nexport default ControlView;\n\nconst ControlItem = observer(({ tagData }) => {\n  const store = useGlobalStore();\n  const { tag2color } = store;\n\n  const [tags, setTags] = useState([]);\n  const handleClickOption = (value) => {\n    const currentTags = [...tags];\n    const index = currentTags.indexOf(value);\n    if (index > -1) {\n      currentTags.splice(index, 1);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    } else {\n      currentTags.push(value);\n      store.setTagColor(value, tagData.value);\n      setTags(currentTags);\n    }\n  };\n\n  return (\n    <div className=\"control-item\">\n      <div className=\"control-item-title\">{tagData.label}</div>\n      <div className=\"control-item-options\">\n        {tagData.list.map((item) => (\n          <ControlOption\n            key={item}\n            value={item}\n            clickOption={handleClickOption}\n            isSelect={tags.indexOf(item) > -1 && tag2color[item]}\n          />\n        ))}\n      </div>\n    </div>\n  );\n});\n\nconst ControlOption = ({ value, clickOption, isSelect }) => {\n  const className = [\"control-item-option\", isSelect && \"option-active\"]\n    .filter((a) => a)\n    .join(\" \");\n  const style = isSelect\n    ? { background: isSelect, border: `1px solid ${isSelect}` }\n    : {};\n  return (\n    <div className={className} onClick={() => clickOption(value)} style={style}>\n      {value}\n    </div>\n  );\n};\n","import React from \"react\";\n// import * as d3 from \"d3\";\n// import { useGlobalStore } from \"../../Store\";\n// import { observer } from \"mobx-react-lite\";\n\nconst CircleUnit = React.memo(\n  ({ cx, cy, r, colors, opacity, doi, handleClick, isSelect, title }) => {\n    const stepAngle = (2 * Math.PI) / colors.length;\n    const polarX = (angle) => cx + Math.sin(angle) * r;\n    const polarY = (angle) => cy + Math.cos(angle) * r;\n    const points = colors.map((_, i) => ({\n      startX: polarX(stepAngle * i),\n      startY: polarY(stepAngle * i),\n      endX: polarX(stepAngle * (i + 1)),\n      endY: polarY(stepAngle * (i + 1)),\n    }));\n\n    const borderOpacity = isSelect ? 1 : 0;\n\n    return (\n      <g id=\"unit-g\" onClick={() => handleClick(doi)} cursor=\"pointer\">\n        <title>{title}</title>\n        <g id=\"unit-border-g\">\n          <circle\n            cx={cx}\n            cy={cy}\n            r={1.4 * r}\n            fill=\"none\"\n            stroke=\"red\"\n            strokeWidth={0.6 * r}\n            opacity={borderOpacity}\n          />\n        </g>\n        <g id=\"unit-sector-g\" opacity={opacity}>\n          {points.length > 1 ? (\n            points.map((point, i) => (\n              <path\n                key={i}\n                d={`M ${cx} ${cy}\n              L ${point.startX} ${point.startY}\n              A ${r} ${r} 0 0 0 ${point.endX} ${point.endY}\n              Z\n              `}\n                stroke=\"white\"\n                fill={colors[i]}\n                strokeWidth={0.1 * r}\n                // fill-opacity=\"0.2\"\n              />\n            ))\n          ) : (\n            <circle\n              cx={cx}\n              cy={cy}\n              r={r}\n              fill={colors[0]}\n              // stroke=\"red\"\n              // strokeWidth={0.15 * r}\n            />\n          )}\n        </g>\n      </g>\n    );\n  }\n);\n\nexport default CircleUnit;\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.scss\";\nimport CircleUnit from \"./CircleUnit\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { toJS } from \"mobx\";\nimport { get } from \"lodash\";\nimport * as d3 from \"d3\";\n\nconst unitLayoutPadding = {\n  top: 30,\n  left: 40,\n  right: 15,\n  bottom: 1,\n};\n\nconst unitBlockPadding = {\n  top: 2,\n  left: 3,\n  right: 3,\n  bottom: 1,\n};\n\nconst UnitView = observer(() => {\n  const store = useGlobalStore();\n  const {\n    papers,\n    unitXAttr,\n    unitYAttr,\n    unitXAttrList,\n    unitYAttrList,\n    unitBlockCount,\n    maxUnitBlockPaperCount,\n    doi2paperBlockPos,\n    // doi2privateTags,\n    // doi2publicTags,\n    // doi2comments,\n    // doi2colors,\n    controlIsActive,\n    currentSelected,\n    setCurrentSelected,\n  } = store;\n\n  // const svg = document.querySelector(\"#unit-svg\");\n  // const svgWidth =\n  //   svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right;\n  // const svgHeight =\n  //   svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom;\n\n  const [svgWidth, setSvgWidth] = useState(0);\n  const [svgHeight, setSvgHeight] = useState(0);\n\n  // 初始化svg长宽\n  useEffect(() => {\n    const svg = document.querySelector(\"#unit-svg\");\n    setSvgWidth(\n      svg.clientWidth - unitLayoutPadding.left - unitLayoutPadding.right\n    );\n    setSvgHeight(\n      svg.clientHeight - unitLayoutPadding.top - unitLayoutPadding.bottom\n    );\n  }, []);\n  const unitBlockWidth =\n    unitXAttrList.length > 0\n      ? svgWidth / unitXAttrList.length -\n        unitBlockPadding.left -\n        unitBlockPadding.right\n      : 0;\n  const unitBlockHeight =\n    unitYAttrList.length > 0\n      ? svgHeight / unitYAttrList.length -\n        unitBlockPadding.top -\n        unitBlockPadding.bottom\n      : 0;\n  // console.log(unitBlockWidth, unitBlockHeight);\n\n  const aspectRatio = Math.floor(\n    unitBlockWidth > 0 ? unitBlockHeight / unitBlockWidth : 1\n  );\n\n  const blockCountX = Math.ceil(\n    Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n  );\n  // console.log('blockCountX', blockCountX);\n\n  const xAttr2blockCountX = unitXAttrList.map((xAttr, i) => {\n    const maxColumnBlockCount = Math.max(\n      ...unitYAttrList.map((yAttr, j) => get(unitBlockCount, [xAttr, yAttr], 0))\n    );\n    let blockCountX = Math.ceil(\n      Math.sqrt(maxUnitBlockPaperCount / aspectRatio)\n    );\n    if (maxColumnBlockCount > maxUnitBlockPaperCount) {\n      blockCountX += 1;\n    }\n    return blockCountX;\n  });\n  // console.log(\"xAttr2blockCountX\", xAttr2blockCountX);\n\n  // const blockCountY = Math.ceil(aspectRatio * blockCountX);\n\n  let r = unitBlockWidth / blockCountX;\n  // console.log(\"r\", r);\n\n  const xAttr2blockCountX_StartCount = [0];\n  const xAttr2blockCountX_StartPos = [0];\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartCount.push(\n      xAttr2blockCountX_StartCount[i - 1] + xAttr2blockCountX[i - 1]\n    );\n  }\n\n  r =\n    (svgWidth -\n      (unitBlockPadding.left + unitBlockPadding.right) * unitXAttrList.length) /\n    (xAttr2blockCountX_StartCount[xAttr2blockCountX_StartCount.length - 1] +\n      xAttr2blockCountX[xAttr2blockCountX.length - 1]);\n  // console.log(\"new r\", r);\n\n  for (let i = 1; i < unitXAttrList.length; i++) {\n    xAttr2blockCountX_StartPos.push(\n      xAttr2blockCountX_StartCount[i] * r +\n        (unitBlockPadding.left + unitBlockPadding.right) * i\n    );\n  }\n  // console.log(\"xAttr2blockCountX_StartCount\", xAttr2blockCountX_StartCount);\n  // console.log(\"xAttr2blockCountX_StartPos\", xAttr2blockCountX_StartPos);\n  const scale = d3.scaleLinear().domain([0, 100]).range([0.25, 0.8]);\n  const citeCount2grey = (count) => d3.interpolateGreys(scale(count));\n  const paperCircles = papers.map((paper) => {\n    const paperCircle = {};\n    paperCircle.oriData = toJS(paper);\n\n    paperCircle.BlockIndexX = unitXAttrList.indexOf(paper[unitXAttr]);\n    paperCircle.BlockIndexY = unitYAttrList.indexOf(paper[unitYAttr]);\n\n    const doi = paper.DOI;\n    paperCircle.doi = doi;\n\n    paperCircle.circleIndexX =\n      paper.unitIndex % xAttr2blockCountX[paperCircle.BlockIndexX];\n    paperCircle.circleIndexY = Math.floor(\n      paper.unitIndex / xAttr2blockCountX[paperCircle.BlockIndexX]\n    );\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      paperCircle.BlockIndexX *\n        (unitBlockWidth + unitBlockPadding.left + unitBlockPadding.right) +\n      (paperCircle.circleIndexX + 0.5) * r;\n    paperCircle.cy =\n      unitLayoutPadding.top +\n      paperCircle.BlockIndexY *\n        (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) +\n      (paperCircle.circleIndexY + 0.5) * r;\n\n    paperCircle.cx =\n      unitLayoutPadding.left +\n      xAttr2blockCountX_StartPos[paperCircle.BlockIndexX] +\n      (paperCircle.circleIndexX + 0.5) * r;\n\n    paperCircle.citationGrey = citeCount2grey(paper.CitationCount);\n    paperCircle.activeColors = paper.colors;\n    paperCircle.colors =\n      paperCircle.activeColors.length > 0\n        ? paperCircle.activeColors\n        : [paperCircle.citationGrey];\n\n    paperCircle.opacity = controlIsActive\n      ? paperCircle.activeColors.length > 0\n        ? 0.8\n        : 0.4\n      : 0.8;\n\n    paperCircle.title = paper.Title;\n\n    return paperCircle;\n  });\n\n  const xLabels = unitXAttrList.map((xAttr, i) => {\n    const startX = unitLayoutPadding.left + xAttr2blockCountX_StartPos[i];\n    const middleX = startX + (xAttr2blockCountX[i] * r) / 2;\n    return {\n      value: xAttr,\n      x: middleX,\n      y: unitLayoutPadding.top * 0.8,\n    };\n  });\n\n  const yLabels = unitYAttrList.map((yAttr, i) => {\n    const startY =\n      unitLayoutPadding.top +\n      (unitBlockHeight + unitBlockPadding.top + unitBlockPadding.bottom) * i;\n    return {\n      value: yAttr,\n      x: unitLayoutPadding.left * 0.35,\n      y: startY,\n    };\n  });\n\n  const handleClickPaper = (doi) => {\n    console.log(\"click\", doi);\n    setCurrentSelected(doi);\n  };\n\n  return (\n    <div className=\"unit-view\">\n      <svg id=\"unit-svg\" width=\"100%\" height=\"100%\">\n        <g id=\"units\">\n          {r > 0 &&\n            paperCircles.map((paper, i) => (\n              <CircleUnit\n                key={i}\n                cx={paper.cx}\n                cy={paper.cy}\n                r={r / 2.4}\n                // grey={paper.citationGrey}\n                // oriData={paper.oriData}\n                doi={paper.doi}\n                colors={paper.colors}\n                opacity={paper.opacity}\n                handleClick={handleClickPaper}\n                isSelect={currentSelected === paper.doi}\n                title={paper.title}\n              />\n            ))}\n        </g>\n        <g id=\"x-label\">\n          {r > 0 &&\n            xLabels.map((label) => (\n              <text\n                key={label.value}\n                x={label.x}\n                y={label.y}\n                textAnchor=\"middle\"\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n        <g id=\"y-label\">\n          {r > 0 &&\n            yLabels.map((label) => (\n              <text\n                key={label.value}\n                // x={label.x}\n                // y={label.y}\n                // textAnchor=\"start\"\n                transform={`translate(${label.x}, ${label.y}) rotate(90)`}\n                fontSize={r * 1.6}\n                fill=\"rgb(78, 78, 78)\"\n              >\n                {label.value}\n              </text>\n            ))}\n        </g>\n      </svg>\n    </div>\n  );\n});\n\nexport default UnitView;\n","import React, { useState, useRef } from \"react\";\nimport \"./index.scss\";\nimport { useGlobalStore } from \"../../Store\";\nimport { observer } from \"mobx-react-lite\";\nimport { get } from \"lodash\";\nimport { Switch } from \"antd\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport { Tag, Input } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport { toJS } from \"mobx\";\n\nconst DetailView = observer(() => {\n  const store = useGlobalStore();\n  const { currentSelectedPaper, setPaper } = store;\n  const paper = currentSelectedPaper;\n  // console.log(\"currentSelectedPaper\", toJS(currentSelectedPaper));\n  // if (!currentSelectedPaper) {\n  //   return <div></div>;\n  // }\n\n  const doi = get(paper, \"DOI\", \"\");\n\n  const editTags = [\n    {\n      title: \"Public Tags\",\n      value: \"publicTags\",\n      initTags: get(paper, \"publicTags\", []),\n    },\n    {\n      title: \"Private Tags\",\n      value: \"privateTags\",\n      initTags: get(paper, \"privateTags\", []),\n    },\n  ];\n  const handleChangeTags = (attr, value) => {\n    doi && setPaper(doi, attr, value);\n  };\n  const handleChangeRead = (value) => {\n    setPaper(doi, \"read\", value);\n  };\n  return (\n    <div className=\"detail-view\" key={doi}>\n      {paper && (\n        <>\n          <div className=\"detail-title\">{paper.Title}</div>\n          <div className=\"detail-authors\">\n            {get(paper, \"authors\", []).join(\"; \")} ({paper.Year})\n          </div>\n          <div className=\"detail-edit-tags\">\n            <div className=\"detail-edit-read\">\n              <div className=\"detail-edit-title\">Read</div>\n              <Switch\n                size=\"small\"\n                checkedChildren={<CheckOutlined />}\n                unCheckedChildren={<CloseOutlined />}\n                defaultChecked={get(paper, \"read\", false)}\n                onChange={handleChangeRead}\n              />\n            </div>\n            {editTags.map((editTag) => (\n              <DetailEditTags\n                key={editTag.value}\n                title={editTag.title}\n                initTags={editTag.initTags}\n                handleChangeTags={(value) =>\n                  handleChangeTags(editTag.value, value)\n                }\n              />\n            ))}\n          </div>\n          <div className=\"detail-attrs\">\n            <DetailItem paper={paper} label={\"AuthorKeywords\"} />\n            <DetailItem paper={paper} label={\"DOI\"} />\n            <DetailItem paper={paper} label={\"AuthorAffiliation\"} />\n            <DetailItem paper={paper} label={\"Abstract\"} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n});\n\nexport default DetailView;\n\nconst DetailItem = ({ paper, label }) => (\n  <div className=\"detail-attr\">\n    <div className=\"detail-key\">{label}:</div>\n    <div className=\"detail-content\">{get(paper, label, \"\")}</div>\n  </div>\n);\n\nconst DetailEditTags = ({ title, initTags, handleChangeTags }) => {\n  const [tags, _setTags] = useState(initTags);\n  const setTags = (newTags) => {\n    handleChangeTags(newTags);\n    _setTags(newTags);\n  };\n  const [editInputIndex, setEditInputIndex] = useState(-1);\n  // const [editInput, setEditInput] = useState();\n  // const saveEditInputRef = (input) => setEditInput(input);\n  const input = useRef();\n  // const saveInputRef = (input) => setInput(input);\n\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const handleEditInputConfirm = () => {\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setTags(newTags);\n    setEditInputIndex(-1);\n    setEditInputValue(\"\");\n  };\n\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputConfirm = () => {\n    if (inputValue && tags.indexOf(inputValue) < 0) {\n      setTags([...tags, inputValue]);\n      setInputVisible(false);\n      setInputValue(\"\");\n    }\n  };\n\n  const handleClose = (removeTag) => {\n    setTags(tags.filter((tag) => tag !== removeTag));\n  };\n\n  const [inputVisible, setInputVisible] = useState(false);\n  const showInput = () => {\n    setInputVisible(true);\n    // input.focus();\n  };\n  return (\n    <div className=\"detail-edit-tag\">\n      <div className=\"detail-edit-title\">{title}:</div>\n      <div className=\"detail-edit-tags\">\n        <>\n          {tags.map((tag, index) => {\n            if (editInputIndex === index) {\n              return (\n                <Input\n                  // ref={saveEditInputRef}\n                  key={tag}\n                  size=\"small\"\n                  className=\"tag-input\"\n                  value={editInputValue}\n                  onchange={(e) => setEditInputValue(e.target.value)}\n                  onBlur={handleEditInputConfirm}\n                  onPressEnter={handleEditInputConfirm}\n                />\n              );\n            }\n\n            const tagElem = (\n              <Tag\n                className=\"edit-tag\"\n                key={tag}\n                closable={true}\n                onClose={() => handleClose(tag)}\n              >\n                <span\n                // onDoubleClick={(e) => {\n                //   setEditInputIndex(index);\n                //   setEditInputValue(tag);\n                //   editInput.focus();\n                //   e.preventDefault();\n                // }}\n                >\n                  {tag}\n                </span>\n              </Tag>\n            );\n            return tagElem;\n          })}\n          {inputVisible && (\n            <Input\n              ref={input}\n              type=\"text\"\n              size=\"small\"\n              className=\"tag-input\"\n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onBlur={handleInputConfirm}\n              onPressEnter={handleInputConfirm}\n            />\n          )}\n          {!inputVisible && (\n            <Tag className=\"site-tag-plus\" onClick={showInput}>\n              <PlusOutlined /> New Tag\n            </Tag>\n          )}\n        </>\n      </div>\n    </div>\n  );\n};\n","export const userList = [\n  \"Prof. Yuan\",\n  \"Guozheng Li\",\n  \"Shuai Chen\",\n  \"Chenglei Yue\",\n  \"Ruike Jiang\",\n  \"Can Liu\",\n  \"Jincheng Li\",\n  \"Chaofan Yang\",\n  \"Hanning Shao\",\n  \"Yuchu Luo\",\n  \"Zhixian Lin\",\n  \"Min Tian\",\n  \"Dingyi Yang\",\n  \"Changhe Yang\",\n  \"Yanda Li\",\n  \"Datong Wei\",\n  \"Cong Wu\",\n  \"Hao Wu\",\n  \"Shaocong Tan\",\n  \"Jiacheng Yu\",\n  \"Sihang Li\",\n  \"Zhen Li\",\n  \"Haohua Liu\",\n];\n\nexport default userList;\n","import React from \"react\";\nimport \"./index.scss\";\nimport userList from \"../../Common/userList\";\nimport { useGlobalStore } from \"../../Store\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\n\n\nconst Header = () => {\n  const store = useGlobalStore();\n  const handleChange = (userId) => {\n    store.setUserId(userId);\n  };\n  return (\n    <div className=\"header\">\n      <div className=\"title\">Paper Management System</div>\n      <div className=\"user-selector title\">\n        User: &nbsp;\n        <Select\n          // defaultValue=\"\"\n          size=\"small\"\n          onChange={handleChange}\n          style={{ width: 130 }}\n          placeholder=\"Set User\"\n        >\n          {userList.map((user) => (\n            <Option value={user} key={user}>\n              {user}\n            </Option>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import \"./App.scss\";\nimport { StoreProvider, useGlobalStore } from \"./Store\";\n// import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport ControlView from \"./Views/ControlView\";\nimport UnitView from \"./Views/UnitView\";\nimport DetailView from \"./Views/DetailView\";\nimport Header from \"./Views/Header\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <ViewContainer />\n    </StoreProvider>\n  );\n}\n\nexport default App;\n\n// init data\nconst ViewContainer = () => {\n  const store = useGlobalStore();\n  useEffect(() => {\n    const fetchPapers = async () => {\n      const papers = await d3.csv(\"data.csv\");\n      store.setPapers(papers);\n    };\n    fetchPapers();\n  }, [store]);\n  return (\n    <div className=\"view-container\">\n      <div className=\"header-container\">\n        <Header />\n      </div>\n      <div className=\"main-container\">\n        <div className=\"control-main-container\">\n          <div className=\"control-view-container\">\n            <ControlView />\n          </div>\n          <div className=\"unit-view-container\">\n            <UnitView />\n          </div>\n        </div>\n        <div className=\"detail-view-container\">\n          <DetailView />\n        </div>\n      </div>\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}